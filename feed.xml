<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>ju ka</title><description>I will add blogposts about technology with focus on Swift and Kubernetes. ü§ì I would love to get in touch with you. If you have any feedback, questions, ideas, etc. just drop me a line! ‚úâÔ∏è</description><link>https://juliankahnert.de</link><language>en</language><lastBuildDate>Tue, 16 Mar 2021 22:09:18 +0000</lastBuildDate><pubDate>Tue, 16 Mar 2021 22:09:18 +0000</pubDate><ttl>250</ttl><atom:link href="https://juliankahnert.de/feed.xml" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://juliankahnert.de/posts/2021-02-22--neil-young</guid><title>Repost: 24/192 Music Downloads ... and why they make no sense</title><description>In this repost the original author monty picks up on several acoustic fallacies, explains the background and corrects them. I think it is worth publishing this article not only in the web archive to keep this reference article alive.</description><link>https://juliankahnert.de/posts/2021-02-22--neil-young</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>This article is a little different than the previous ones, a repost. I have been a student of hearing technology &amp; audiology. As part of the curriculum we studied different areas of (psycho)acoustics. The article from <a href="https://web.archive.org/web/20190117020814/https://people.xiph.org/~xiphmont/demo/neil-young.html">xiph.org on 24bit/192kHz audio</a> was cited in various situations. In my opinion, the author <em>monty</em> picks up on several acoustic fallacies, explains the background and corrects them.</p><p>A few days ago I saw that the article is no longer available. At least I could still dig it out of the <a href="https://web.archive.org">web.archive.org</a>, which, by the way, is really awesome! However, I think that the article should not gather dust in an archive, but I would like to give it a new home here. Let me know what you think about it! üòä</p><h1 id="original-article">Original Article</h1><p>Articles last month revealed that musician Neil Young and Apple‚Äôs Steve Jobs discussed offering digital music downloads of ‚Äòuncompromised studio quality‚Äô. Much of the press and user commentary was particularly enthusiastic about the prospect of uncompressed 24 bit 192kHz downloads. 24/192 featured prominently in my own conversations with Mr.¬†Young‚Äôs group several months ago.</p><p>Unfortunately, there is no point to distributing music in 24-bit/192kHz format. Its playback fidelity is slightly inferior to 16/44.1 or 16/48, and it takes up 6 times the space.</p><p>There are a few real problems with the audio quality and ‚Äòexperience‚Äô of digitally distributed music today. 24/192 solves none of them. While everyone fixates on 24/192 as a magic bullet, we‚Äôre not going to see any actual improvement.</p><h2 id="first-the-bad-news">First, the bad news</h2><p>In the past few weeks, I‚Äôve had conversations with intelligent, scientifically minded individuals who believe in 24/192 downloads and want to know how anyone could possibly disagree. They asked good questions that deserve detailed answers.</p><p>I was also interested in what motivated high-rate digital audio advocacy. Responses indicate that few people understand basic signal theory or the sampling theorem, which is hardly surprising. Misunderstandings of the mathematics, technology, and physiology arose in most of the conversations, often asserted by professionals who otherwise possessed significant audio expertise. Some even argued that the <a href="https://web.archive.org/web/20190117020814/http://en.wikipedia.org/wiki/Sampling_theorem">sampling theorem</a> doesn‚Äôt really explain how digital audio actually works <a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>.</p><p>Misinformation and superstition only serve charlatans. So, let‚Äôs cover some of the basics of why 24/192 distribution makes no sense before suggesting some improvements that actually do.</p><h2 id="gentlemen-meet-your-ears">Gentlemen, meet your ears</h2><p>The ear hears via hair cells that sit on the resonant basilar membrane in the cochlea. Each hair cell is effectively tuned to a narrow frequency band determined by its position on the membrane. Sensitivity peaks in the middle of the band and falls off to either side in a lopsided cone shape overlapping the bands of other nearby hair cells. A sound is inaudible if there are no hair cells tuned to hear it.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/cochlea-and-responses.png" width="80%"/>
</p>
</p>
<figcaption>
Above left: anatomical cutaway drawing of a human cochlea with the basilar membrane colored in beige. The membrane is tuned to resonate at different frequencies along its length, with higher frequencies near the base and lower frequencies at the apex. Approximate locations of several frequencies are marked.<br><br> Above right: schematic diagram representing hair cell response along the basilar membrane as a bank of overlapping filters.
</figcaption>
</figure><p>This is similar to an analog radio that picks up the frequency of a strong station near where the tuner is actually set. The farther off the station‚Äôs frequency is, the weaker and more distorted it gets until it disappears completely, no matter how strong. There is an upper (and lower) audible frequency limit, past which the sensitivity of the last hair cells drops to zero, and hearing ends.</p><h2 id="sampling-rate-and-the-audible-spectrum">Sampling rate and the audible spectrum</h2><p>I‚Äôm sure you‚Äôve heard this many, many times: The human hearing range spans 20Hz to 20kHz. It‚Äôs important to know how researchers arrive at those specific numbers.</p><p>First, we measure the ‚Äòabsolute threshold of hearing‚Äô across the entire audio range for a group of listeners. This gives us a curve representing the very quietest sound the human ear can perceive for any given frequency as measured in ideal circumstances on healthy ears. Anechoic surroundings, precision calibrated playback equipment, and rigorous statistical analysis are the easy part. Ears and auditory concentration both fatigue quickly, so testing must be done when a listener is fresh. That means lots of breaks and pauses. Testing takes anywhere from many hours to many days depending on the methodology.</p><p>Then we collect data for the opposite extreme, the ‚Äòthreshold of pain‚Äô. This is the point where the audio amplitude is so high that the ear‚Äôs physical and neural hardware is not only completely overwhelmed by the input, but experiences physical pain. Collecting this data is trickier. You don‚Äôt want to permanently damage anyone‚Äôs hearing in the process.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/ath-top.png" width="80%"/>
</p>
<figcaption>
Above: Approximate equal loudness curves derived from Fletcher and Munson (1933) plus modern sources for frequencies &gt; 16kHz. The absolute threshold of hearing and threshold of pain curves are marked in red. Subsequent researchers refined these readings, culminating in the Phon scale and the ISO 226 standard equal loudness curves. Modern data indicates that the ear is significantly less sensitive to low frequencies than Fletcher and Munson‚Äôs results.
</figcaption>
</figure><p>The upper limit of the human audio range is defined to be where the absolute threshold of hearing curve crosses the threshold of pain. To even faintly perceive the audio at that point (or beyond), it must simultaneously be unbearably loud.</p><p>At low frequencies, the cochlea works like a bass reflex cabinet. The helicotrema is an opening at the apex of the basilar membrane that acts as a port tuned to somewhere between 40Hz to 65Hz depending on the individual. Response rolls off steeply below this frequency.</p><p>Thus, 20Hz - 20kHz is a generous range. It thoroughly covers the audible spectrum, an assertion backed by nearly a century of experimental data.</p><h2 id="genetic-gifts-and-golden-ears">Genetic gifts and golden ears</h2><p>Based on my correspondences, many people believe in individuals with extraordinary gifts of hearing. Do such ‚Äògolden ears‚Äô really exist?</p><p>It depends on what you call a golden ear.</p><p>Young, healthy ears hear better than old or damaged ears. Some people are exceptionally well trained to hear nuances in sound and music most people don‚Äôt even know exist. There was a time in the 1990s when I could identify every major mp3 encoder by sound (back when they were all pretty bad), and could demonstrate this reliably in double-blind testing <a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>.</p><p>When healthy ears combine with highly trained discrimination abilities, I would call that person a golden ear. Even so, below-average hearing can also be trained to notice details that escape untrained listeners. Golden ears are more about training than hearing beyond the physical ability of average mortals.</p><p>Auditory researchers would love to find, test, and document individuals with truly exceptional hearing, such as a greatly extended hearing range. Normal people are nice and all, but everyone wants to find a genetic freak for a really juicy paper. We haven‚Äôt found any such people in the past 100 years of testing, so they probably don‚Äôt exist. Sorry. We‚Äôll keep looking.</p><h2 id="spectrophiles">Spectrophiles</h2><p>Perhaps you‚Äôre skeptical about everything I‚Äôve just written; it certainly goes against most marketing material. Instead, let‚Äôs consider a hypothetical Wide Spectrum Video craze that doesn‚Äôt carry preexisting audiophile baggage.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/visspec.png" width="80%"/>
</p>
<figcaption>
Above: The approximate log scale response of the human eye‚Äôs rods and cones, superimposed on the visible spectrum. These sensory organs respond to light in overlapping spectral bands, just as the ear‚Äôs hair cells are tuned to respond to overlapping bands of sound frequencies.
</figcaption>
</figure><p>The human eye sees a limited range of frequencies of light, aka, the visible spectrum. This is directly analogous to the audible spectrum of sound waves. Like the ear, the eye has sensory cells (rods and cones) that detect light in different but overlapping frequency bands.</p><p>The visible spectrum extends from about 400THz (deep red) to 850THz (deep violet) <a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a>. Perception falls off steeply at the edges. Beyond these approximate limits, the light power needed for the slightest perception can fry your retinas. Thus, this is a generous span even for young, healthy, genetically gifted individuals, analogous to the generous limits of the audible spectrum.</p><p>In our hypothetical Wide Spectrum Video craze, consider a fervent group of Spectrophiles who believe these limits aren‚Äôt generous enough. They propose that video represent not only the visible spectrum, but also infrared and ultraviolet. Continuing the comparison, there‚Äôs an even more hardcore [and proud of it!] faction that insists this expanded range is yet insufficient, and that video feels so much more natural when it also includes microwaves and some of the X-ray spectrum. To a Golden Eye, they insist, the difference is night and day!</p><p>Of course this is ludicrous.</p><p>No one can see X-rays (or infrared, or ultraviolet, or microwaves). It doesn‚Äôt matter how much a person believes he can. Retinas simply don‚Äôt have the sensory hardware.</p><p>Here‚Äôs an experiment anyone can do: Go get your Apple IR remote. The LED emits at 980nm, or about 306THz, in the near-IR spectrum. This is not far outside of the visible range. Take the remote into the basement, or the darkest room in your house, in the middle of the night, with the lights off. Let your eyes adjust to the blackness.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/apple-ir.jpg" width="80%"/>
</p>
<figcaption>
Above: Apple IR remote photographed using a digital camera. Though the emitter is quite bright and the frequency emitted is not far past the red portion of the visible spectrum, it‚Äôs completely invisible to the eye.
</figcaption>
</figure><p>Can you see the Apple Remote‚Äôs LED flash when you press a button <a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a>? No? Not even the tiniest amount? Try a few other IR remotes; many use an IR wavelength a bit closer to the visible band, around 310-350THz. You won‚Äôt be able to see them either. The rest emit right at the edge of visibility from 350-380 THz and may be just barely visible in complete blackness with dark-adjusted eyes <a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a>. All would be blindingly, painfully bright if they were well inside the visible spectrum.</p><p>These near-IR LEDs emit from the visible boundry to at most 20% beyond the visible frequency limit. 192kHz audio extends to 400% of the audible limit. Lest I be accused of comparing apples and oranges, auditory and visual perception drop off similarly toward the edges.</p><h2 id="khz-considered-harmful">192kHz considered harmful</h2><p>192kHz digital music files offer no benefits. They‚Äôre not quite neutral either; practical fidelity is slightly worse. The ultrasonics are a liability during playback.</p><p>Neither audio transducers nor power amplifiers are free of distortion, and distortion tends to increase rapidly at the lowest and highest frequencies. If the same transducer reproduces ultrasonics along with audible content, any nonlinearity will shift some of the ultrasonic content down into the audible range as an uncontrolled spray of intermodulation distortion products covering the entire audible spectrum. Nonlinearity in a power amplifier will produce the same effect. The effect is very slight, but listening tests have confirmed that both effects can be audible.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/intermod.png" width="80%"/>
</p>
<figcaption>
Above: Illustration of distortion products resulting from intermodulation of a 30kHz and a 33kHz tone in a theoretical amplifier with a nonvarying total harmonic distortion (THD) of about .09%. Distortion products appear throughout the spectrum, including at frequencies lower than either tone. <br><br> Inaudible ultrasonics contribute to intermodulation distortion in the audible range (light blue area). Systems not designed to reproduce ultrasonics typically have much higher levels of distortion above 20kHz, further contributing to intermodulation. Widening a design‚Äôs frequency range to account for ultrasonics requires compromises that decrease noise and distortion performance within the audible spectrum. Either way, unneccessary reproduction of ultrasonic content diminishes performance.
</figcaption>
</figure><p>There are a few ways to avoid the extra distortion:</p><ol type="1">
<li><p>A dedicated ultrasonic-only speaker, amplifier, and crossover stage to separate and independently reproduce the ultrasonics you can‚Äôt hear, just so they don‚Äôt mess up the sounds you can.</p></li>
<li><p>Amplifiers and transducers designed for wider frequency reproduction, so ultrasonics don‚Äôt cause audible intermodulation. Given equal expense and complexity, this additional frequency range must come at the cost of some performance reduction in the audible portion of the spectrum.</p></li>
<li><p>Speakers and amplifiers carefully designed not to reproduce ultrasonics anyway.</p></li>
<li><p>Not encoding such a wide frequency range to begin with. You can‚Äôt and won‚Äôt have ultrasonic intermodulation distortion in the audible band if there‚Äôs no ultrasonic content.</p></li>
</ol><p>They all amount to the same thing, but only 4) makes any sense.</p><p>If you‚Äôre curious about the performance of your own system, the following samples contain a 30kHz and a 33kHz tone in a 24/96 WAV file, a longer version in a FLAC, some tri-tone warbles, and a normal song clip shifted up by 24kHz so that it‚Äôs entirely in the ultrasonic range from 24kHz to 46kHz:</p><h3 id="intermod-tests">Intermod Tests</h3><ul>
<li>30kHz tone + 33kHz tone (24 bit / 96kHz) [5 second WAV] <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/30_and_33-long.flac">[30 second FLAC]</a></li>
<li>26kHz - 48kHz warbling tones (24 bit / 96kHz) <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/warbles-96.wav">[10 second WAV]</a></li>
<li>26kHz - 96kHz warbling tones (24 bit / 192kHz) <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/warbles-192.wav">[10 second WAV]</a></li>
<li>Song clip shifted up by 24kHz (24 bit / 96kHz WAV) <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/Pido_O_trollbat.wav">[10 second WAV]</a> <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/Pido_O.wav">(original version of above clip)</a> (16 bit / 44.1kHz WAV)</li>
</ul><p>Assuming your system is actually capable of full 96kHz playback <a href="#fn6" class="footnote-ref" id="fnref6" role="doc-noteref"><sup>6</sup></a>, the above files should be completely silent with no audible noises, tones, whistles, clicks, or other sounds. If you hear anything, your system has a nonlinearity causing audible intermodulation of the ultrasonics. Be careful when increasing volume; running into digital or analog clipping, even soft clipping, will suddenly cause loud intermodulation tones.</p><p>In summary, it‚Äôs not certain that intermodulation from ultrasonics will be audible on a given system. The added distortion could be insignificant or it could be noticable. Either way, ultrasonic content is never a benefit, and on plenty of systems it will audibly hurt fidelity. On the systems it doesn‚Äôt hurt, the cost and complexity of handling ultrasonics could have been saved, or spent on improved audible range performance instead.</p><h2 id="sampling-fallacies-and-misconceptions">Sampling fallacies and misconceptions</h2><p>Sampling theory is often unintuitive without a signal processing background. It‚Äôs not surprising most people, even brilliant PhDs in other fields, routinely misunderstand it. It‚Äôs also not surprising many people don‚Äôt even realize they have it wrong.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/jaggy.png" width="80%"/>
</p>
<figcaption>
Above: Sampled signals are often depicted as a rough stairstep (red) that seems a poor approximation of the original signal. However, the representation is mathematically exact and the signal recovers the exact smooth shape of the original (blue) when converted back to analog.
</figcaption>
</figure><p>The most common misconception is that sampling is fundamentally rough and lossy. A sampled signal is often depicted as a jagged, hard-cornered stair-step facsimile of the original perfectly smooth waveform. If this is how you envision sampling working, you may believe that the faster the sampling rate (and more bits per sample), the finer the stair-step and the closer the approximation will be. The digital signal would sound closer and closer to the original analog signal as sampling rate approaches infinity.</p><p>Similarly, many non-DSP people would look at the following:</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/jaggy2.png" width="80%"/>
</figure><p>And say, ‚ÄúUgh!‚Äù It might appear that a sampled signal represents higher frequency analog waveforms badly. Or, that as audio frequency increases, the sampled quality falls and frequency response falls off, or becomes sensitive to input phase.</p><p>Looks are deceiving. These beliefs are incorrect!</p><blockquote>
<p><em>added 2013-04-04:</em> As a followup to all the mail I got about digital waveforms and stairsteps, I demonstrate actual digital behavior on real equipment in our video <a href="https://web.archive.org/web/20190117020814/https://video.xiph.org/vid2.shtml">Digital Show &amp; Tell</a> so you need not simply take me at my word here!</p>
</blockquote><p>All signals with content entirely below the Nyquist frequency (half the sampling rate) are captured perfectly and completely by sampling; an infinite sampling rate is not required. Sampling doesn‚Äôt affect frequency response or phase. The analog signal can be reconstructed losslessly, smoothly, and with the exact timing of the original analog signal.</p><p>So the math is ideal, but what of real world complications? The most notorious is the band-limiting requirement. Signals with content over the Nyquist frequency must be lowpassed before sampling to avoid aliasing distortion; this analog lowpass is the infamous antialiasing filter. Antialiasing can‚Äôt be ideal in practice, but modern techniques bring it very close. ‚Ä¶and with that we come to oversampling.</p><h2 id="oversampling">Oversampling</h2><p>Sampling rates over 48kHz are irrelevant to high fidelity audio data, but they are internally essential to several modern digital audio techniques. <em>Oversampling</em> is the most relevant example <a href="#fn7" class="footnote-ref" id="fnref7" role="doc-noteref"><sup>7</sup></a>.</p><p>Oversampling is simple and clever. You may recall from my <a href="https://web.archive.org/web/20190117020814/http://www.xiph.org/video/vid1.shtml">A Digital Media Primer</a> for Geeks that high sampling rates provide a great deal more space between the highest frequency audio we care about (20kHz) and the Nyquist frequency (half the sampling rate). <a href="https://web.archive.org/web/20190117020814/http://www.xiph.org/video/vid1.shtml?time=678.1">This allows for simpler, smoother, more reliable analog anti-aliasing filters, and thus higher fidelity</a>. This extra space between 20kHz and the Nyquist frequency is essentially just spectral padding for the analog filter.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/filters.png" width="80%"/>
</p>
<figcaption>
Above: Whiteboard diagram from A Digital Media Primer for Geeks illustrating the transition band width available for a 48kHz ADC/DAC (left) and a 96kHz ADC/DAC (right).
</figcaption>
</figure><p>That‚Äôs only half the story. Because digital filters have few of the practical limitations of an analog filter, we can complete the anti-aliasing process with greater efficiency and precision digitally. The very high rate raw digital signal passes through a digital anti-aliasing filter, which has no trouble fitting a transition band into a tight space. After this further digital anti-aliasing, the extra padding samples are simply thrown away. Oversampled playback approximately works in reverse.</p><p>This means we can use low rate 44.1kHz or 48kHz audio with all the fidelity benefits of 192kHz or higher sampling (smooth frequency response, low aliasing) and none of the drawbacks (ultrasonics that cause intermodulation distortion, wasted space). Nearly all of today‚Äôs analog-to-digital converters (ADCs) and digital-to-analog converters (DACs) oversample at very high rates. Few people realize this is happening because it‚Äôs completely automatic and hidden.</p><p>ADCs and DACs didn‚Äôt always transparently oversample. Thirty years ago, some recording consoles recorded at high sampling rates using only analog filters, and production and mastering simply used that high rate signal. The digital anti-aliasing and decimation steps (resampling to a lower rate for CDs or DAT) happened in the final stages of mastering. This may well be one of the early reasons 96kHz and 192kHz became associated with professional music production <a href="#fn8" class="footnote-ref" id="fnref8" role="doc-noteref"><sup>8</sup></a>.</p><h2 id="bit-vs-24-bit">16 bit vs 24 bit</h2><p>OK, so 192kHz music files make no sense. Covered, done. What about 16 bit vs.¬†24 bit audio?</p><p>It‚Äôs true that 16 bit linear PCM audio does not quite cover the entire theoretical dynamic range of the human ear in ideal conditions. Also, there are (and always will be) reasons to use more than 16 bits in recording and production.</p><p>None of that is relevant to playback; here 24 bit audio is as useless as 192kHz sampling. The good news is that at least 24 bit depth doesn‚Äôt harm fidelity. It just doesn‚Äôt help, and also wastes space.</p><h2 id="revisiting-your-ears">Revisiting your ears</h2><p>We‚Äôve discussed the frequency range of the ear, but what about the dynamic range from the softest possible sound to the loudest possible sound?</p><p>One way to define absolute dynamic range would be to look again at the absolute threshold of hearing and threshold of pain curves. The distance between the highest point on the threshold of pain curve and the lowest point on the absolute threshold of hearing curve is about 140 decibels for a young, healthy listener. That wouldn‚Äôt last long though; +130dB is loud enough to damage hearing permanently in seconds to minutes. For reference purposes, a jackhammer at one meter is only about 100-110dB.</p><p>The absolute threshold of hearing increases with age and hearing loss. Interestingly, the threshold of pain decreases with age rather than increasing. The hair cells of the cochlea themselves posses only a fraction of the ear‚Äôs 140dB range; musculature in the ear continuously adjust the amount of sound reaching the cochlea by shifting the ossicles, much as the iris regulates the amount of light entering the eye <a href="#fn9" class="footnote-ref" id="fnref9" role="doc-noteref"><sup>9</sup></a>. This mechanism stiffens with age, limiting the ear‚Äôs dynamic range and reducing the effectiveness of its protection mechanisms <a href="#fn10" class="footnote-ref" id="fnref10" role="doc-noteref"><sup>10</sup></a>.</p><h2 id="environmental-noise">Environmental noise</h2><p>Few people realize how quiet the absolute threshold of hearing really is.</p><p>The very quietest perceptible sound is about -8dbSPL <a href="#fn11" class="footnote-ref" id="fnref11" role="doc-noteref"><sup>11</sup></a>. Using an A-weighted scale, the hum from a 100 watt incandescent light bulb one meter away is about 10dBSPL, so about 18dB louder. The bulb will be much louder on a dimmer.</p><p>20dBSPL (or 28dB louder than the quietest audible sound) is often quoted for an empty broadcasting/recording studio or sound isolation room. This is the baseline for an exceptionally quiet environment, and one reason you‚Äôve probably never noticed hearing a light bulb.</p><h2 id="the-dynamic-range-of-16-bits">The dynamic range of 16 bits</h2><p>16 bit linear PCM has a dynamic range of 96dB according to the most common definition, which calculates dynamic range as (6*bits)dB. Many believe that 16 bit audio cannot represent arbitrary sounds quieter than -96dB. This is incorrect.</p><p>I have linked to two 16 bit audio files here; one contains a 1kHz tone at 0 dB (where 0dB is the loudest possible tone) and the other a 1kHz tone at -105dB.</p><ul>
<li><strong>Sample 1:</strong> <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/1kHz-0-dither.wav">1kHz tone at 0 dB (16 bit / 48kHz WAV)</a></li>
<li><strong>Sample 2:</strong> <a href="https://juliankahnert.de/img/2021/24-192-music-downloads/1kHz-105-dither.wav">1kHz tone at -105 dB (16 bit / 48kHz WAV)</a></li>
</ul><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/-105dB.png" width="80%"/>
</p>
<figcaption>
Above: Spectral analysis of a -105dB tone encoded as 16 bit / 48kHz PCM. 16 bit PCM is clearly deeper than 96dB, else a -105dB tone could not be represented, nor would it be audible.
</figcaption>
</figure><p>How is it possible to encode this signal, encode it with no distortion, and encode it well above the noise floor, when its peak amplitude is one third of a bit?</p><p>Part of this puzzle is solved by proper dither, which renders quantization noise independent of the input signal. By implication, this means that dithered quantization introduces no distortion, just uncorrelated noise. That in turn implies that we can encode signals of arbitrary depth, even those with peak amplitudes much smaller than one bit <a href="#fn12" class="footnote-ref" id="fnref12" role="doc-noteref"><sup>12</sup></a>. However, dither doesn‚Äôt change the fact that once a signal sinks below the noise floor, it should effectively disappear. How is the -105dB tone still clearly audible above a -96dB noise floor?</p><p>The answer: Our -96dB noise floor figure is effectively wrong; we‚Äôre using an inappropriate definition of dynamic range. (6*bits)dB gives us the RMS noise of the entire broadband signal, but each hair cell in the ear is sensitive to only a narrow fraction of the total bandwidth. As each hair cell hears only a fraction of the total noise floor energy, the noise floor at that hair cell will be much lower than the broadband figure of -96dB.</p><p>Thus, 16 bit audio can go considerably deeper than 96dB. With use of shaped dither, which moves quantization noise energy into frequencies where it‚Äôs harder to hear, the effective dynamic range of 16 bit audio reaches 120dB in practice <a href="#fn13" class="footnote-ref" id="fnref13" role="doc-noteref"><sup>13</sup></a>, more than fifteen times deeper than the 96dB claim.</p><p>120dB is greater than the difference between a mosquito somewhere in the same room and a jackhammer a foot away‚Ä¶. or the difference between a deserted ‚Äòsoundproof‚Äô room and a sound loud enough to cause hearing damage in seconds.</p><p>16 bits is enough to store all we can hear, and will be enough forever.</p><h2 id="signal-to-noise-ratio">Signal-to-noise ratio</h2><p>It‚Äôs worth mentioning briefly that the ear‚Äôs S/N ratio is smaller than its absolute dynamic range. Within a given critical band, typical S/N is estimated to only be about 30dB. Relative S/N does not reach the full dynamic range even when considering widely spaced bands. This assures that linear 16 bit PCM offers higher resolution than is actually required.</p><p>It is also worth mentioning that increasing the bit depth of the audio representation from 16 to 24 bits does not increase the perceptible resolution or ‚Äòfineness‚Äô of the audio. It only increases the dynamic range, the range between the softest possible and the loudest possible sound, by lowering the noise floor. However, a 16-bit noise floor is already below what we can hear.</p><h2 id="when-does-24-bit-matter">When does 24 bit matter?</h2><p>Professionals use 24 bit samples in recording and production <a href="#fn14" class="footnote-ref" id="fnref14" role="doc-noteref"><sup>14</sup></a> for headroom, noise floor, and convenience reasons.</p><p>16 bits is enough to span the real hearing range with room to spare. It does not span the entire possible signal range of audio equipment. The primary reason to use 24 bits when recording is to prevent mistakes; rather than being careful to center 16 bit recording‚Äì risking clipping if you guess too high and adding noise if you guess too low‚Äì 24 bits allows an operator to set an approximate level and not worry too much about it. Missing the optimal gain setting by a few bits has no consequences, and effects that dynamically compress the recorded range have a deep floor to work with.</p><p>An engineer also requires more than 16 bits during mixing and mastering. Modern work flows may involve literally thousands of effects and operations. The quantization noise and noise floor of a 16 bit sample may be undetectable during playback, but multiplying that noise by a few thousand times eventually becomes noticeable. 24 bits keeps the accumulated noise at a very low level. Once the music is ready to distribute, there‚Äôs no reason to keep more than 16 bits.</p><h2 id="listening-tests">Listening tests</h2><p>Understanding is where theory and reality meet. A matter is settled only when the two agree.</p><p>Empirical evidence from listening tests backs up the assertion that 44.1kHz/16 bit provides highest-possible fidelity playback. There are numerous controlled tests confirming this, but I‚Äôll plug a recent paper, <a href="https://web.archive.org/web/20190117020814/http://www.aes.org/e-lib/browse.cfm?elib=14195">Audibility of a CD-Standard A/D/A Loop Inserted into High-Resolution Audio Playback</a>, done by local folks here at the <a href="https://web.archive.org/web/20190117020814/http://www.bostonaudiosociety.org/">Boston Audio Society</a>.</p><p>Unfortunately, downloading the full paper requires an AES membership. However it‚Äôs been discussed widely in articles and on forums, with the authors joining in. Here‚Äôs a few links:</p><ul>
<li><a href="https://web.archive.org/web/20190117020814/http://mixonline.com/recording/mixing/audio_emperors_new_sampling/">The Emperor‚Äôs New Sampling Rate</a></li>
<li><a href="https://web.archive.org/web/20190117020814/http://www.hydrogenaudio.org/forums/index.php?showtopic=57406">Hydrogen Audio forum discussion thread</a></li>
<li><a href="https://web.archive.org/web/20190117020814/http://www.bostonaudiosociety.org/explanation.htm">Supplemental information page at the Boston Audio Society, including the equipment and sample lists</a></li>
</ul><p>This paper presented listeners with a choice between high-rate DVD-A/SACD content, chosen by high-definition audio advocates to show off high-def‚Äôs superiority, and that same content resampled on the spot down to 16-bit / 44.1kHz Compact Disc rate. The listeners were challenged to identify any difference whatsoever between the two using an ABX methodology. BAS conducted the test using high-end professional equipment in noise-isolated studio listening environments with both amateur and trained professional listeners.</p><p>In 554 trials, listeners chose correctly 49.8% of the time. In other words, they were guessing. Not one listener throughout the entire test was able to identify which was 16/44.1 and which was high rate <a href="#fn15" class="footnote-ref" id="fnref15" role="doc-noteref"><sup>15</sup></a>, and the 16-bit signal wasn‚Äôt even dithered!</p><p>Another recent study <a href="#fn16" class="footnote-ref" id="fnref16" role="doc-noteref"><sup>16</sup></a> investigated the possibility that ultrasonics were audible, as earlier studies had suggested. The test was constructed to maximize the possibility of detection by placing the intermodulation products where they‚Äôd be most audible. It found that the ultrasonic tones were not audible‚Ä¶ but the intermodulation distortion products introduced by the loudspeakers could be.</p><p>This paper inspired a great deal of further research, much of it with mixed results. Some of the ambiguity is explained by finding that ultrasonics can induce more intermodulation distortion than expected in power amplifiers as well. For example, <a href="https://web.archive.org/web/20190117020814/http://www.davidgriesinger.com/intermod.ppt">David Griesinger reproduced this experiment</a> <a href="#fn17" class="footnote-ref" id="fnref17" role="doc-noteref"><sup>17</sup></a> and found that his loudspeaker setup did not introduce audible intermodulation distortion from ultrasonics, but his stereo amplifier did.</p><h2 id="caveat-lector">Caveat Lector</h2><p>It‚Äôs important not to cherry-pick individual papers or ‚Äòexpert commentary‚Äô out of context or from self-interested sources. Not all papers agree completely with these results (and a few disagree in large part), so it‚Äôs easy to find minority opinions that appear to vindicate every imaginable conclusion. <em>Regardless, the papers and links above are representative of the vast weight and breadth of the experimental record.</em> No peer-reviewed paper that has stood the test of time disagrees substantially with these results. Controversy exists only within the consumer and enthusiast audiophile communities.</p><p>If anything, the number of ambiguous, inconclusive, and outright invalid experimental results available through Google highlights how tricky it is to construct an accurate, objective test. The differences researchers look for are minute; they require rigorous statistical analysis to spot subconscious choices that escape test subjects‚Äô awareness. That we‚Äôre likely trying to ‚Äòprove‚Äô something that doesn‚Äôt exist makes it even more difficult. Proving a null hypothesis is akin to proving the halting problem; you can‚Äôt. You can only collect evidence that lends overwhelming weight.</p><p>Despite this, papers that confirm the null hypothesis are especially strong evidence; confirming inaudibility is far more experimentally difficult than disputing it. Undiscovered mistakes in test methodologies and equipment nearly always produce false positive results (by accidentally introducing audible differences) rather than false negatives.</p><p>If professional researchers have such a hard time properly testing for minute, isolated audible differences, you can imagine how hard it is for amateurs.</p><h2 id="how-to-inadvertently-screw-up-a-listening-comparison">How to [inadvertently] screw up a listening comparison</h2><p>The number one comment I heard from believers in super high rate audio was [paraphrasing]: <em>‚ÄúI‚Äôve listened to high rate audio myself and the improvement is obvious. Are you seriously telling me not to trust my own ears?‚Äù</em></p><p>Of course you can trust your ears. It‚Äôs brains that are gullible. I don‚Äôt mean that flippantly; as human beings, we‚Äôre all wired that way.</p><h2 id="confirmation-bias-the-placebo-effect-and-double-blind">Confirmation bias, the placebo effect, and double-blind</h2><p>In any test where a listener can tell two choices apart via any means apart from listening, the results will usually be what the listener expected in advance; this is called <a href="https://en.wikipedia.org/wiki/Confirmation_bias">confirmation bias</a> and it‚Äôs similar to the <a href="https://en.wikipedia.org/wiki/Placebo#Effects">placebo effect</a>. It means people ‚Äòhear‚Äô differences because of subconscious cues and preferences that have nothing to do with the audio, like preferring a more expensive (or more attractive) amplifier over a cheaper option.</p><p>The human brain is designed to notice patterns and differences, even where none exist. This tendency can‚Äôt just be turned off when a person is asked to make objective decisions; it‚Äôs completely subconscious. Nor can a bias be defeated by mere skepticism. Controlled experimentation shows that awareness of confirmation bias can increase rather than decreases the effect! A test that doesn‚Äôt carefully eliminate confirmation bias is worthless <a href="#fn18" class="footnote-ref" id="fnref18" role="doc-noteref"><sup>18</sup></a>.</p><p>In single-blind testing, a listener knows nothing in advance about the test choices, and receives no feedback during the course of the test. Single-blind testing is better than casual comparison, but it does not eliminate the experimenter‚Äôs bias. The test administrator can easily inadvertently influence the test or transfer his own subconscious bias to the listener through inadvertent cues (eg, ‚ÄúAre you sure that‚Äôs what you‚Äôre hearing?‚Äù, body language indicating a ‚Äòwrong‚Äô choice, hesitating inadvertently, etc). An <a href="https://web.archive.org/web/20190117020814/http://en.wikipedia.org/wiki/Experimenter%27s_bias">experimenter‚Äôs bias</a> has also been experimentally proven to influence a test subject‚Äôs results.</p><p><em>Double-blind</em> listening tests are the gold standard; in these tests neither the test administrator nor the testee have any knowledge of the test contents or ongoing results. Computer-run ABX tests are the most famous example, and there are freely available tools for performing ABX tests on your own computer<a href="#fn19" class="footnote-ref" id="fnref19" role="doc-noteref"><sup>19</sup></a>. ABX is considered a minimum bar for a listening test to be meaningful; reputable audio forums such as <a href="https://web.archive.org/web/20190117020814/http://www.hydrogenaudio.org/">Hydrogen Audio</a> often <a href="https://web.archive.org/web/20190117020814/http://www.hydrogenaudio.org/forums/index.php?showtopic=3974#entry149481">do not even allow discussion of listening results unless they meet this minimum objectivity requirement</a> <a href="#fn20" class="footnote-ref" id="fnref20" role="doc-noteref"><sup>20</sup></a>.</p><figure>
<p align="center">
<img src="https://juliankahnert.de/img/2021/24-192-music-downloads/squishyball.png" width="80%"/>
</p>
<figcaption>
Above: Squishyball, a simple command-line ABX tool, running in an xterm.
</figcaption>
</figure><p>I personally don‚Äôt do any quality comparison tests during development, no matter how casual, without an ABX tool. Science is science, no slacking.</p><h2 id="loudness-tricks">Loudness tricks</h2><p>The human ear can consciously discriminate amplitude differences of about 1dB, and experiments show subconscious awareness of amplitude differences under .2dB. Humans almost universally consider louder audio to sound better, and .2dB is enough to establish this preference. Any comparison that fails to carefully amplitude-match the choices will see the louder choice preferred, even if the amplitude difference is too small to consciously notice. Stereo salesmen have known this trick for a long time.</p><p>The professional testing standard is to match sources to within .1dB or better. This often requires use of an oscilloscope or signal analyzer. Guessing by turning the knobs until two sources sound about the same is not good enough.</p><h2 id="clipping">Clipping</h2><p>Clipping is another easy mistake, sometimes obvious only in retrospect. Even a few clipped samples or their aftereffects are easy to hear compared to an unclipped signal.</p><p>The danger of clipping is especially pernicious in tests that create, resample, or otherwise manipulate digital signals on the fly. Suppose we want to compare the fidelity of 48kHz sampling to a 192kHz source sample. A typical way is to downsample from 192kHz to 48kHz, upsample it back to 192kHz, and then compare it to the original 192kHz sample in an ABX test <a href="#fn21" class="footnote-ref" id="fnref21" role="doc-noteref"><sup>21</sup></a>. This arrangement allows us to eliminate any possibility of equipment variation or sample switching influencing the results; we can use the same DAC to play both samples and switch between without any hardware mode changes.</p><p>Unfortunately, most samples are mastered to use the full digital range. Naive resampling can and often will clip occasionally. It is necessary to either monitor for clipping (and discard clipped audio) or avoid clipping via some other means such as attenuation.</p><h2 id="different-media-different-master">Different media, different master</h2><p>I‚Äôve run across a few articles and blog posts that declare the virtues of 24 bit or 96/192kHz by comparing a CD to an audio DVD (or SACD) of the ‚Äòsame‚Äô recording. This comparison is invalid; the masters are usually different.</p><h2 id="inadvertent-cues">Inadvertent cues</h2><p>Inadvertant audible cues are almost inescapable in older analog and hybrid digital/analog testing setups. Purely digital testing setups can completely eliminate the problem in some forms of testing, but also multiply the potential of complex software bugs. Such limitations and bugs have a long history of causing false-positive results in testing <a href="#fn22" class="footnote-ref" id="fnref22" role="doc-noteref"><sup>22</sup></a>.</p><p><a href="https://web.archive.org/web/20190117020814/http://www.bostonaudiosociety.org/bas_speaker/abx_testing2.htm">The Digital Challenge - More on ABX Testing</a>, tells a fascinating story of a specific listening test conducted in 1984 to rebut audiophile authorities of the time who asserted that CDs were inherently inferior to vinyl. The article is not concerned so much with the results of the test (which I suspect you‚Äôll be able to guess), but the processes and real-world messiness involved in conducting such a test. For example, an error on the part of the testers inadvertantly revealed that an invited audiophile expert had not been making choices based on audio fidelity, but rather by listening to the slightly different clicks produced by the ABX switch‚Äôs analog relays!</p><p>Anecdotes do not replace data, but this story is instructive of the ease with which undiscovered flaws can bias listening tests. Some of the audiophile beliefs discussed within are also highly entertaining; one hopes that some modern examples are considered just as silly 20 years from now.</p><h2 id="finally-the-good-news">Finally, the good news</h2><p>What actually works to improve the quality of the digital audio to which we‚Äôre listening?</p><h2 id="better-headphones">Better headphones</h2><p>The easiest fix isn‚Äôt digital. The most dramatic possible fidelity improvement for the cost comes from a good pair of headphones. Over-ear, in ear, open or closed, it doesn‚Äôt much matter. They don‚Äôt even need to be expensive, though expensive headphones can be worth the money.</p><p>Keep in mind that some headphones are expensive because they‚Äôre well made, durable and sound great. Others are expensive because they‚Äôre $20 headphones under a several hundred dollar layer of styling, brand name, and marketing. I won‚Äôt make specfic recommendations here, but I will say you‚Äôre not likely to find good headphones in a big box store, even if it specializes in electronics or music. As in all other aspects of consumer hi-fi, do your research (and caveat emptor).</p><h2 id="lossless-formats">Lossless formats</h2><p>It‚Äôs true enough that a properly encoded Ogg file (or MP3, or AAC file) will be indistinguishable from the original at a moderate bitrate.</p><p>But what of badly encoded files?</p><p>Twenty years ago, all mp3 encoders were really bad by today‚Äôs standards. Plenty of these old, bad encoders are still in use, presumably because the licenses are cheaper and most people can‚Äôt tell or don‚Äôt care about the difference anyway. Why would any company spend money to fix what it‚Äôs completely unaware is broken?</p><p>Moving to a newer format like <a href="https://web.archive.org/web/20190117020814/http://www.vorbis.com/">Vorbis</a> or AAC doesn‚Äôt necessarily help. For example, many companies and individuals used (and still use) <a href="https://web.archive.org/web/20190117020814/http://xiphmont.livejournal.com/51160.html">FFmpeg‚Äôs very-low-quality built-in Vorbis encoder</a> because it was the default in FFmpeg and they were unaware how bad it was. AAC has an even longer history of widely-deployed, low-quality encoders; all mainstream lossy formats do.</p><p>Lossless formats like <a href="https://web.archive.org/web/20190117020814/http://flac.sourceforge.net/">FLAC</a> avoid any possibility of damaging audio fidelity <a href="#fn23" class="footnote-ref" id="fnref23" role="doc-noteref"><sup>23</sup></a> with a poor quality lossy encoder, or even by a good lossy encoder used incorrectly.</p><p>A second reason to distribute lossless formats is to avoid generational loss. Each reencode or transcode loses more data; even if the first encoding is transparent, it‚Äôs very possible the second will have audible artifacts. This matters to anyone who might want to remix or sample from downloads. It especially matters to us codec researchers; we need clean audio to work with.</p><h2 id="better-masters">Better masters</h2><p>The <a href="https://web.archive.org/web/20190117020814/http://www.aes.org/e-lib/browse.cfm?elib=14195">BAS test I linked earlier</a> mentions as an aside that the SACD version of a recording can sound substantially better than the CD release. It‚Äôs not because of increased sample rate or depth but because the SACD used a higher-quality master. When bounced to a CD-R, the SACD version still sounds as good as the original SACD and better than the CD release because the original audio used to make the SACD was better. Good production and mastering obviously contribute to the final quality of the music <a href="#fn24" class="footnote-ref" id="fnref24" role="doc-noteref"><sup>24</sup></a>.</p><p>The recent coverage of ‚ÄòMastered for iTunes‚Äô and similar initiatives from other industry labels is somewhat encouraging. What remains to be seen is whether or not Apple and the others actually ‚Äòget it‚Äô or if this is merely a hook for selling consumers yet another, more expensive copy of music they already own.</p><h2 id="surround">Surround</h2><p>Another possible ‚Äòsales hook‚Äô, one I‚Äôd enthusiastically buy into myself, is surround recordings. Unfortunately, there‚Äôs some technical peril here.</p><p>Old-style discrete surround with many channels (5.1, 7.1, etc) is a technical relic dating back to the theaters of the 1960s. It is inefficient, using more channels than competing systems. The surround image is limited, and tends to collapse toward the nearer speakers when a listener sits or shifts out of position.</p><p>We can represent and encode excellent and robust localization with systems like Ambisonics. The problems are the cost of equipment for reproduction and the fact that something encoded for a natural soundfield both sounds bad when mixed down to stereo, and can‚Äôt be created artificially in a convincing way. It‚Äôs hard to fake ambisonics or holographic audio, sort of like how 3D video always seems to degenerate into a gaudy gimmick that reliably makes 5% of the population motion sick.</p><p>Binaural audio is similarly difficult. You can‚Äôt simulate it because it works slightly differently in every person. It‚Äôs a learned skill tuned to the self-assembling system of the pinnae, ear canals, and neural processing, and it never assembles exactly the same way in any two individuals. People also subconsciously shift their heads to enhance localization, and can‚Äôt localize well unless they do. That‚Äôs something that can‚Äôt be captured in a binaural recording, though it can to an extent in fixed surround.</p><p>These are hardly impossible technical hurdles. Discrete surround has a proven following in the marketplace, and I‚Äôm personally especially excited by the possibilities offered by Ambisonics.</p><h2 id="outro">Outro</h2><blockquote>
<p>‚ÄúI never did care for music much. It‚Äôs the high fidelity!‚Äù</p>
</blockquote><p>‚Äî Flanders &amp; Swann, A Song of Reproduction</p><p>The point is enjoying the music, right? Modern playback fidelity is incomprehensibly better than the already excellent analog systems available a generation ago. Is the logical extreme any more than just another <a href="https://web.archive.org/web/20190117020814/http://www.youtube.com/watch?v=M3w1_E1V46M">first world problem</a>? Perhaps, but bad mixes and encodings do bother me; they distract me from the music, and I‚Äôm probably not alone.</p><p>Why push back against 24/192? Because it‚Äôs a solution to a problem that doesn‚Äôt exist, a business model based on willful ignorance and scamming people. The more that pseudoscience goes unchecked in the world at large, the harder it is for truth to overcome truthiness‚Ä¶ even if this is a small and relatively insignificant example.</p><blockquote>
<p>‚ÄúFor me, it is far better to grasp the Universe as it really is than to persist in delusion, however satisfying and reassuring.‚Äù</p>
</blockquote><p>‚Äî Carl Sagan</p><h2 id="further-reading">Further reading</h2><p>Readers have alerted me to a pair of excellent papers of which I wasn‚Äôt aware before beginning my own article. They tackle many of the same points I do in greater detail.</p><ul>
<li><p><a href="https://web.archive.org/web/20190117020814/http://www.meridian.co.uk/ara/coding2.pdf">Coding High Quality Digital Audio</a> by Bob Stuart of Meridian Audio is beautifully concise despite its greater length. Our conclusions differ somewhat (he takes as given the need for a slightly wider frequency range and bit depth without much justification), but the presentation is clear and easy to follow. [Edit: I may not agree with many of Mr.¬†Stuart‚Äôs other articles, but I like this one a lot.]</p></li>
<li><p><a href="https://web.archive.org/web/20190117020814/http://lavryengineering.com/pdfs/lavry-sampling-theory.pdf">Sampling Theory For Digital Audio</a> [Updated link 2012-10-04] by Dan Lavry of Lavry Engineering is another article that several readers pointed out. It expands my two pages or so about sampling, oversampling, and filtering into a more detailed 27 page treatment. Worry not, there are plenty of graphs, examples and references.</p></li>
</ul><p>Stephane Pigeon of <a href="https://web.archive.org/web/20190117020814/http://www.audiocheck.net/">audiocheck.net</a> wrote to plug the browser-based listening tests featured on his web site. The set of tests is relatively small as yet, but several were directly relevant in the context of this article. They worked well and I found the quality to be quite good.</p><h1 id="footnotes">Footnotes</h1><p>‚Äú[The Sampling Theorem] hasn‚Äôt been invented to explain how digital audio works, it‚Äôs the other way around. Digital Audio was invented from the theorem, if you don‚Äôt believe the theorem then you can‚Äôt believe in digital audio either!!‚Äù http://www.head-fi.org/t/415361/24bit-vs-16bit-the-myth-exploded</p><p>Cameron Nicklaus Christou, Optimal Dither and Noise Shaping in Image Processing</p><p>Although the ear works not entirely unlike a Fourier transform, its resolution is relatively limited. This places a limit on the maximum practical dynamic depth of 16 bit audio signals.</p><p>It should be obvious that ‚Äòcan‚Äô and ‚Äòsometimes‚Äô are not the same as ‚Äòwill‚Äô and ‚Äòalways‚Äô. Intermodulation distortion from ultrasonics is a possibility, not a certainty, in any given system for a given set of material. The Meyer and Moran null result indicates that intermodulation distortion was inaudible on the systems used during the course of their testing.</p><p>Readers are invited to <a href="###intermod-tests">try the simple ultrasonic intermodulation distortion test above</a> for a quick check of the intermodulation potential of their own equipment.</p><p>I offer two thoughts.</p><p>First, confirmation bias does not replace all correct results with incorrect results. It skews the results in some uncontrolled direction by an unknown amount. How can you tell right or wrong for sure if the test is rigged by your own subconscious? Let‚Äôs say you expected to hear a large difference but were shocked to hear a small difference. What if there was actually no difference at all? Or, maybe there was a difference and, being aware of a potential bias, your well meaning skepticism overcompensated? Or maybe you were completely right? Objective testing, such as ABX, eliminates all this uncertainty.</p><p>Second, ‚ÄúSo you think you‚Äôre not biased? Great! Prove it!‚Äù The value of an objective test lies not only in its ability to inform one‚Äôs own understanding, but also to convince others. Claims require proof. Extraordinary claims require extraordinary proof.</p><p><a href="https://web.archive.org/web/20190117020814/http://www.foobar2000.org/">Foobar2000</a> with the <a href="https://web.archive.org/web/20190117020814/http://www.foobar2000.org/components/view/foo_abx">ABX plug-in</a></p><p><a href="https://web.archive.org/web/20190117020814/http://svn.xiph.org/trunk/squishyball">Squishyball</a>, a Linux command-line tool we use within Xiph</p><blockquote>
<p>‚ÄúSome purists will tell you to skip FLACs altogether and just buy WAVs. [‚Ä¶] By buying WAVs, you can avoid the potential data loss incurred when the file is compressed into a FLAC. This data loss is rare, but it happens.‚Äù</p>
</blockquote><p>This is false. A lossless compression process never alters the original data in any way, and FLAC is no exception.</p><p>In the event that Wired was referring to hardware corruption of data files (disk failure, memory failure, sunspots), FLAC and WAV would both be affected. A FLAC file, however, is checksummed and would detect the corruption. The FLAC file is also smaller than the WAV, and so a random corruption would be less likely because there‚Äôs less data that could be affected.</p><p>Today‚Äôs digital technology has allowed loudness to be pumped up to an absurd level. It‚Äôs also provided a plethora of automatic, highly complex, proprietary DAW plugins that are deployed en-masse without a wide understanding of how they work or what they‚Äôre really doing.</p><section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p>As one frustrated poster wrote,<a href="#fnref1" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn2" role="doc-endnote"><p>If it wasn‚Äôt the most boring party trick ever, it was pretty close.<a href="#fnref2" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn3" role="doc-endnote"><p>It‚Äôs more typical to speak of visible light as wavelengths measured in nanometers or angstroms. I‚Äôm using frequency to be consistent with sound. They‚Äôre equivalent, as frequency is just the inverse of wavelength.<a href="#fnref3" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn4" role="doc-endnote"><p>The LED experiment doesn‚Äôt work with ‚Äòultraviolet‚Äô LEDs, mainly because they‚Äôre not really ultraviolet. They‚Äôre deep enough violet to cause a little bit of fluorescence, but they‚Äôre still well within the visible range. Real ultraviolet LEDs cost anywhere from $100-$1000 apiece and would cause eye damage if used for this test. Consumer grade not-really-UV LEDs also emit some faint white light in order to appear brighter, so you‚Äôd be able to see them even if the emission peak really was in the ultraviolet.<a href="#fnref4" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn5" role="doc-endnote"><p>The original version of this article stated that IR LEDs operate from 300-325THz (about 920-980nm), wavelengths that are invisible. Quite a few readers wrote to say that they could in fact just barely see the LEDs in some (or all) of their remotes. Several were kind enough to let me know which remotes these were, and I was able to test several on a spectrometer. Lo and behold, these remotes were using higher-frequency LEDs operating from 350-380THz (800-850nm), just overlapping the extreme edge of the visible range.<a href="#fnref5" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn6" role="doc-endnote"><p>Many systems that cannot play back 96kHz samples will silently downsample to 48kHz, rather than refuse to play the file. In this case, the tones will not be played at all and playback would be silent no matter how nonlinear the system is.<a href="#fnref6" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn7" role="doc-endnote"><p>Oversampling is not the only application for high sampling rates in signal processing. There are a few theoretical advantages to producing band-limited audio at a high sampling rate eschewing decimation, even if it is to be downsampled for distribution. It‚Äôs not clear what if any are used in practice, as the workings of most professional consoles are trade secrets.<a href="#fnref7" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn8" role="doc-endnote"><p>Historical reasoning or not, there‚Äôs no question that many professionals today use high rates because they mistakenly assume that retaining content beyond 20kHz sounds better, just as consumers do.<a href="#fnref8" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn9" role="doc-endnote"><p>The sensation of eardrums ‚Äòuncringing‚Äô after turning off loud music is quite real!<a href="#fnref9" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn10" role="doc-endnote"><p>Some nice diagrams can be found at the HyperPhysics site: [http://hyperphysics.phy-astr.gsu.edu/hbase/sound/protect.html#c1]<a href="#fnref10" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn11" role="doc-endnote"><p>20¬µPa is commonly defined to be 0dB for auditory measurement purposes; it is approximately equal to the threshold of hearing at 1kHz. The ear is as much as 8dB more sensitive between 2 and 4kHz however.<a href="#fnref11" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn12" role="doc-endnote"><p>The following paper has the best explanation of dither that I‚Äôve run across. Although it‚Äôs about image dither, the first half covers the theory and practice of dither in audio before extending its use into images:<a href="#fnref12" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn13" role="doc-endnote"><p>DSP engineers may point out, as one of my own smart-alec compatriots did, that 16 bit audio has a theoretically infinite dynamic range for a pure tone if you‚Äôre allowed to use an infinite Fourier transform to extract it; this concept is very important to radio astronomy.<a href="#fnref13" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn14" role="doc-endnote"><p>Production increasingly uses 32 bit float, both because it‚Äôs very convenient on modern processors, and because it completely eliminates the possibility of accidental clipping at any point going undiscovered and ruining a mix.<a href="#fnref14" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn15" role="doc-endnote"><p>Several readers have wanted to know how, if ultrasonics can cause audible intermodulation distortion, the Meyer and Moran 2007 test could have produced a null result.<a href="#fnref15" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn16" role="doc-endnote"><p>Karou and Shogo, <em>Detection of Threshold for tones above 22kHz</em> (2001). Convention paper 5401 presented at the 110th Convention, May 12-15 2001, Amsterdam.<a href="#fnref16" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn17" role="doc-endnote"><p>Griesinger, <a href="https://web.archive.org/web/20190117020814/http://www.davidgriesinger.com/intermod.ppt">Perception of mid-frequency and high-frequency intermodulation distortion in loudspeakers, and its relationship to high definition audio</a><a href="#fnref17" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn18" role="doc-endnote"><p>Since publication, several commentators wrote to me with similar versions of the same anecdote [paraphrased]: ‚ÄúI once listened to some headphones / amps / recordings expecting result [A] but was totally surprised to find [B] instead! Confirmation bias is hooey!‚Äù<a href="#fnref18" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn19" role="doc-endnote"><p>The easiest tools to use for ABX testing are probably:<a href="#fnref19" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn20" role="doc-endnote"><p>At Hydrogen Audio, the objective testing requirement is abbreviated <em>TOS8</em> as it‚Äôs the eighth item in the Terms Of Service.<a href="#fnref20" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn21" role="doc-endnote"><p>It is commonly assumed that resampling irreparably damages a signal; this isn‚Äôt the case. Unless one makes an obvious mistake, such as causing clipping, the downsampled and then upsampled signal will be audibly indistinguishable from the original. This is the usual test used to establish that higher sampling rates are unneccessary.<a href="#fnref21" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn22" role="doc-endnote"><p>It may not be strictly audio related, but‚Ä¶ faster-than-light neutrinos, anyone?<a href="#fnref22" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn23" role="doc-endnote"><p><a href="https://web.archive.org/web/20190117020814/http://www.wired.com/gadgetlab/2012/02/why-neil-young-hates-mp3-and-what-you-can-do-about-it/">Wired magazine implies that lossless formats like FLAC are not always completely lossless</a>:<a href="#fnref23" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
<li id="fn24" role="doc-endnote"><p>The <a href="https://web.archive.org/web/20190119135326/https://en.wikipedia.org/wiki/Loudness_war">‚ÄòLoudness War‚Äô</a> is a commonly cited example of bad mastering practices in the industry today, though it‚Äôs not the only one. Loudness is also an older phenomenon than the Wikipedia article leads the reader to believe; as early as the 1950s, artists and producers pushed for the loudest possible recordings. Equipment vendors increasingly researched and marketed new technology to allow hotter and hotter masters. Advanced vinyl mastering equipment in the 1970s and 1980s, for example, tracked and nested groove envelopes when possible in order to allow higher amplitudes than the groove spacing would normally permit.<a href="#fnref24" class="footnote-back" role="doc-backlink">‚Ü©Ô∏é</a></p></li>
</ol>
</section>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2019-05-16--pdf-archiver-ios</guid><title>PDF Archiver iOS</title><description>Recently it has become a bit quieter around PDF Archiver - but that doesn't mean that nothing has happened. Let's dive into some new features.</description><link>https://juliankahnert.de/posts/2019-05-16--pdf-archiver-ios</link><pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>In der letzten Zeit ist es etwas ruhiger geworden um <a href="https://pdf-archiver.io">PDF Archiver</a> - was jedoch nicht hei√üt, dass nichts passiert ist, denn:</p><p><a href="https://macos.pdf-archiver.io">PDF Archiver f√ºr macOS</a> analysiert nun den Inhalt deiner gescannten Dokumente. Anschlie√üend werden √ºber <em>Natural Language Processing</em> (NLP) vorhandene Orte und Firmen erkannt. Wurden diese Namen bereits vorher als Tags verwendet, so werden sie dir automatisch vorgeschlagen und angezeigt.</p><p>Dar√ºber hinaus wird gepr√ºft, ob ein Datum in deinem Dokument vorhanden ist. Falls ja, wird dir auch dies automatisch vorgeschlagen, sodass du nur noch eine kurze Beschreibung eingeben und dein gescanntes Dokument speichern musst (oder <code>‚åò s</code> üòä).</p><p>Die automatischen Vorschl√§ge von Datum und Tags waren die Grundlage f√ºr den n√§chsten Schritt vom <a href="http://github.com/pdf-Archiver/">PDF Archiver Projekt</a>. Auch wenn das iPhone, verglichen mit den Macs, ein kleineres Display hat, tragen wir (und ja, ich auch!) es immer bei uns.</p><p>Deshalb freue ich mich sehr ank√ºndigen zu k√∂nnen, dass es schon bald auch eine iOS Version von PDF Archiver geben wird. Mit ihr wird der Slogan <strong>"Scan it. Tag it. Find it."</strong> dann endlich komplett werden!</p><h3>Scan it.</h3><p>Neue Dokumente k√∂nnen ganz einfach eingescannt werden. Die App unterst√ºtzt dich bei der Auswahl des richtigen Kamera-Bereichs und scannt dein Dokument automatisch.</p><p>Wenn du mit dem Scan zufrieden bist, kannst du es abspeichern und direkt das n√§chste Dokument scannen. So landen all deine Briefe, Rechnungen und anderweitigen Dokumente schnell und mit wenig Aufwand auf deinem iPhone und in iCloud Drive.</p><p>W√§hrend des Scans finden zudem verschiedene Analysen statt, die daf√ºr sorgen, dass das fotografierte Dokument nicht nur aufbereitet wird, sondern dir auch das Datum sowie passende Tags f√ºr das eingescannte Dokument vorgeschlagen werden.</p><h3>Tag it.</h3><p>Mit all den analysierten PDF-Dateien auf deinem iPhone kann nun der n√§chste Schritt erfolgen:</p><p>Du bist unterwegs, sitzt in der Bahn oder im Bus und hast gerade etwas Zeit? Nutze diese und tagge deine Dokumente, um sie strukturiert zu archivieren. Die durch PDF Archiver vorgeschlagenen Tag- und Datums-Angaben helfen dir dabei.</p><p>Nat√ºrlich kannst du auch weiterhin die <a href="https://macos.pdf-archiver.io">macOS App</a> verwenden und die Dokumente aus iCloud Drive verarbeiten.</p><h3>Find it.</h3><p>Nach und nach gelangen immer mehr Dokumente in dein pers√∂nliches Archiv.</p><p>Ganz egal wo du gerade bist ‚Äì mit der <a href="https://ios.pdf-archiver.io">PDF Archiver App f√ºr iOS</a> kannst du jederzeit auf deine wichtigsten Informationen zugreifen. So sind Kunden- und Versicherungsnummern sowie weitere relevante Daten immer griffbereit in deiner Tasche.</p><h3>Private Daten sch√ºtzen!</h3><ul><li><em>... analysiert nun den Inhalt deiner gescannten Dokumente.</em></li><li><em>Automatische Vorschl√§ge von Datum und Tags ...</em></li><li><em>Im Hintergrund finden verschiedene Analysen statt ...</em></li></ul><p>All das sind S√§tze, die man ungern im Zusammenhang mit pers√∂nlichen Dokumenten und Rechnungen h√∂rt.</p><p><strong>Dieser Meinung bin auch ich</strong> und deshalb analysiert PDF Archiver die Dokumente in keinem Rechenzentrum, sondern verarbeitet den Text des Dokumentes lediglich <strong>lokal auf deinem iPhone!</strong> Doch Worte sind geduldig ... also √ºberzeug' dich selbst:</p><p>Wie auch schon bei <a href="https://github.com/pdf-archiver/PDF-Archiver">PDF Archiver (macOS)</a> ist der gesamte Quellcode der <a href="https://github.com/pdf-archiver/PDF-Archive-Viewer">iOS App bei GitHub</a> verf√ºgbar.</p><p>Schau' gerne mal rein oder unterst√ºtze die Weiterentwicklung der App!</p><h3>Wann geht's los?</h3><p><s>Bis PDF Archiver den App Store erreicht, wird noch etwas Zeit vergehen. Doch schon jetzt kannst du die App innerhalb der √∂ffentlichen Beta-Version testen. Alle weiteren Informationen zur Installation findest du bei Apple TestFlight.</s></p><p><strong>Update vom 16.07.2019:</strong> Ich freue mich sehr nun endlich die iOS Version von PDF Archiver ver√∂ffentlichen zu k√∂nnen:</p><p align="center">
<a href="https://ios.pdf-archiver.io" target="itunes_store">
  <img src="https://juliankahnert.de/img/AppIcon-PDFArchiveViewer.svg" width="100px">
</a>
<br><br>
<a href="https://ios.pdf-archiver.io" style="display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg) no-repeat;width:135px;height:40px;"></a>
</p><h1>English</h1><p>Lately it has become a bit quieter around <a href="https://pdf-archiver.io">PDF Archiver</a> - but that doesn't mean that there hasn't been much happening in the background.</p><p><a href="https://macos.pdf-archiver.io">PDF Archiver for macOS</a> now analyzes the content of your scanned documents. Then <em>Natural Language Processing</em> (NLP) detects existing locations and companies. If these names have already been used as tags before, they will be automatically suggested to you. In addition, the app checks whether there is a date in the document, that can be suggested. So all you have to do is enter a description and click save (or <code>‚åò s</code> üòä).</p><p>The automatic date and tag suggestions were the basis for the next step of the <a href="http://github.com/pdf-Archiver/">PDF Archiver Project</a>. The iPhone has a smaller display (compared to Macs), but we always carry it with us. I'm very happy to announce that there will be an iOS version of PDF Archiver soon. With it the slogan <strong>"Scan it. Day it. Find it."</strong> now finally is fully reached!</p><h3>Scan it.</h3><p>New documents can be easily scanned. The app supports you by selecting the right camera area and scans the document automatically. If you are satisfied with the selection, you can save it and scan the next document directly. All your letters, invoices etc. will quickly land on your iPhone and in iCloud Drive. In the background, various analyses take place, which process the photographed document and suggest the date and tags.</p><h3>Tag it.</h3><p>With all the analyzed PDF files on your iPhone, you can now take the next step: Are you sitting in the train and have some time? Then now is the perfect time to tag and archive some of your documents. The tag and date suggestions will help you!</p><p>Of course you can still use the <a href="https://macos.pdf-archiver.io">macOS App</a> and process the documents from iCloud Drive.</p><h3>Find it.</h3><p>More and more documents get into your personal archive. No matter where you are - with the <a href="https://ios.pdf-archiver.io">PDF Archiver App for iOS</a> you can always access your most important information. Customer numbers, insurance numbers etc. are always at hand in your pocket.</p><h3>Protect your private data!</h3><ul><li><em>... now analyzes the content of your scanned documents.</em></li><li><em>... automatic date and tag suggestions ...</em></li><li><em>In the background, various analyses take place ...</em></li></ul><p>These are all sentences that you don't like to hear in connection with personal letters and invoices. <strong>This is also my opinion</strong> and therefore PDF Archiver does not analyze the documents on any cloud server, but processes the text of the document <strong>locally on your iPhone!</strong> But words are patient ... so convince yourself: As with <a href="https://github.com/pdf-archiver/PDF-Archiver">PDF Archiver (macOS)</a> the complete source code of the <a href="https://github.com/pdf-archiver/PDF-Archive-Viewer">iOS App at GitHub</a> is available. Have a look or support the further development of the app!</p><h3>When does it start?</h3><p><s>It will be some time before PDF Archiver reaches the App Store. But already now you can test the app within the public beta version. All further information about the installation can be found at Apple TestFlight.</s></p><p><strong>Update from 16.07.2019:</strong> I am very happy to finally release the iOS version of PDF Archiver:</p><p align="center">
<a href="https://ios.pdf-archiver.io" target="itunes_store">
  <img src="https://juliankahnert.de/img/AppIcon-PDFArchiveViewer.svg" width="100px">
</a>
<br><br>
<a href="https://ios.pdf-archiver.io" style="display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg) no-repeat;width:135px;height:40px;"></a>
</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2018-12-20--pdf-archiver-auf-dem-35c3</guid><title>PDF Archiver auf dem 35c3</title><description>PDF Archiver users will meet at the Chaos Communication Congress in Leipzig. Contact me to get more information.</description><link>https://juliankahnert.de/posts/2018-12-20--pdf-archiver-auf-dem-35c3</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>Auch in diesem Jahr werde ich wieder auf dem Chaos Communication Congress in Leipzig sein. Neben spannenden Talks entstehen in den Tagen zwischen Weihnachten und Neujahr auch immer wieder viele kleinere und gr√∂√üere Software-Projekte. So auch <a href="https://pdf-archiver.io">PDF Archiver</a> bei dem <a href="https://github.com/PDF-Archiver/PDF-Archiver/commit/a232f5c2007dca0fd290bdcacd69e7a807ee2d8e">34c3</a>.</p><p>Seit dem 29.12.2017 hat sich einiges an der App ver√§ndert. Neben unz√§hligen kleineren Ver√§nderungen hat die App auch einen DarkMode erhalten. Dar√ºber hinaus ist auch eine iOS App <a href="http://github.com/pdf-Archiver/pdf-archive-viewer">PDF Archive Viewer</a> hinzugekommen, mit der PDFs schnell und √ºbersichtlich gefunden werden k√∂nnen.</p><p align="center">
  <img src="https://www.ccc.de/system/uploads/274/headline/Hello_Loop.gif">
</p><p>Sehr gerne w√ºrde ich den 35c3 nutzen, um mit Leuten in Kontakt zu treten die sich f√ºr das Projekt interessieren oder es beobachten! Hierbei k√∂nnte man Feature-Ideen besprechen, einen kleinen Hackathon starten oder auch einfach nur bei einem Tschunk oder Bier nett sprechen.</p><p>Schreibt mich gerne einfach im <a href="https://pdf-archiver.slack.com">PDF Archiver Slack</a> oder per <a href="mailto:mail@pdf-archiver.io">Mail</a> an und wir stimmen alles weitere ab. üòä</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2018-10-16--pdf-archive-viewer</guid><title>PDF Archive Viewer</title><description>An update to the latest features of the macOS app and introduction of PDF Archive Viewer. This iOS app to browse your archive from your iPhone/iPad.</description><link>https://juliankahnert.de/posts/2018-10-16--pdf-archive-viewer</link><pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>It's been a while since the last post and a few things have changed on the project. First of all, I would like to thank all the nice people, who contacted me and said, how the <a href="https://github.com/JulianKahnert/PDF-Archiver">PDF Archiver</a> improved their workflow. All this positive feedback helps me and encourages me to continue working on it actively. Furthermore there have been some awesome blogposts about the app. I would like to emphasize two german reviews in particular. <a href="https://www.ifun.de/pdf-archiver-deutlich-verbessert-und-mit-symbolischem-abo-preis-124604/">iFun</a> wrote an update of their <a href="https://www.ifun.de/pdf-archiver-open-source-projekt-zur-langzeit-archivierung-119547/">original story</a> and <a href="https://www.sir-apfelot.de/pdf-archiver-22021/">Sir Apfelot</a> posted a wonderful detailed and affectionately written review.</p><p>Today I released Version 1.3.6, which includes some bugfixes and two major features. First, <a href="https://github.com/JulianKahnert/PDF-Archiver">PDF Archiver</a> now supports the all new macOS Dark Mode and I really love it!</p><p align="center">
<a href="https://apps.apple.com/de/app/pdf-archiver/id1352719750?mt=12">
  <img src="https://juliankahnert.de/img/PDFArchiver-DarkMode.png" width="600px">
</a>
</p><p>And second, the app supports iCloud Drive, which can be enabled in the preferences (<code>‚åò ,</code>) now. This feature moves all your documents to iCloud Drive where they can be synced between devices. That said, please keep in mind to backup all your archived documents regularly to a separate location, such as an external hard drive. It is always more secure to have a copy of all documents independent of the scope of fancy iCloud syncing magic. The iCloud Drive feature (finally) brings me to the reason of this blogpost:</p><p>PDF Archiver structures an archive of PDFs and you can find them quickly via the <a href="https://juliankahnert.de/posts/2018-03-03--pdf-archiver/">naming convention</a> and the Finder tags. But what if you need to lookup something, when you don't have your computer nearby? Your iPhone might be a device, which helps out in those cases. That's why I built the open source app <a href="https://github.com/PDF-Archiver/PDF-Archive-Viewer">PDF Archive Viewer</a>, which can be downloaded from the <a href="https://apps.apple.com/de/app/pdf-archiver/id1352719750?mt=12">App Store</a> for free. With this app you can view all your tagged documents and search for the one you want to have a look at. Just give it a try! If you like it, I would love to hear your story in a <a href="https://apps.apple.com/app/id1433801905?action=write-review">App Store review</a> ... and if you don't like it, <a href="mailto:mail@pdf-archiver.io">let me know why</a>. üòä</p><p align="center">
<a href="https://apps.apple.com/app/pdf-archiver/id1433801905?mt=12&app=apps" target="itunes_store">
  <img src="https://juliankahnert.de/img/AppIcon-PDFArchiveViewer.svg" width="100px">
</a>
<br><br>
<a href="https://apps.apple.com/app/pdf-archiver/id1433801905?mt=8&app=apps" style="display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg) no-repeat;width:135px;height:40px;"></a>
</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2018-03-03--pdf-archiver</guid><title>PDF Archiver</title><description>In this blogpost we will discuss the nameing convention and background of PDF Archiver. A tool for tagging files and archiving tasks.</description><link>https://juliankahnert.de/posts/2018-03-03--pdf-archiver</link><pubDate>Sat, 3 Mar 2018 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>Let's be honest: sorting documents is painful, no matter if you try it with analogue folders or digitally on your computer.</p><p>Putting letters in different filing folders might help you to find your documents if needed. But it is a time consuming process, which ended (in my case) in a huge amount of unsorted letters on my desk.</p><h2>New Archiving Approach</h2><p>Last year I started with a new approach. I talked to some friends about a structure which could handle files longterm. We found <a href="http://karl-voit.at/managing-digital-photographs/">this blog post</a> by <a href="http://karl-voit.at">Karl Voit</a> and came up with the following two <em>requirements</em>:</p><ul><li>Longterm archiving</li><li>Fast way to find the documents, e.g. with a clean name structure</li></ul><p>Both will be discussed in the following sections.</p><h3>Longterm Archiving</h3><p>If I have to tag all the old files manually, it will take some time and I don't want to do this more than one time. So at first we dismissed the thought about storing all files with the help of one specific app. We still want to access our documents if a developer stops supporting his app.</p><p>With that in mind, we thought that plain files on a hard drive seemed to be a good fit. The file format was an obvious choice: <a href="https://en.wikipedia.org/wiki/Portable_Document_Format">PDF</a> (or <a href="https://en.wikipedia.org/wiki/PDF/A">PDF/A</a>) files are standardized and exist for quite a while already.</p><p>While being geeks, searching via a terminal was a no-brainer. Furthermore we wanted to put all the necessary information into the filename. This keeps us independent of the current operating/file system and lets us easily backup the whole archive to another machine.</p><h3>Finding Documents</h3><p>With this fixed we create a filename from the following three document attributes:</p><ul><li><strong>Date:</strong> <code>yyyy-mm-dd</code> Date of the document content.</li><li><strong>Description:</strong> <code>--ikea-tradfri-gateway</code> Meaningful description of the document.</li><li><strong>Tags:</strong> <code>__bill_ikea_iot</code> Tags which will help you to find the document in your archive.</li></ul><p>Furthermore we came to the conclusion that we have to remove capital letters, spaces and language specific characters (such as <code>√§, √∂, √º, √ü</code>). This helps to maximize the filesystem compatibility. Finally, the archive looks like this:</p><pre><code class="language-no-highlight">.
‚îî‚îÄ‚îÄ Archive
    ‚îú‚îÄ‚îÄ 2017
    ‚îÇ   ‚îú‚îÄ‚îÄ 2017-05-12--apple-macbook__apple_bill.pdf
    ‚îÇ   ‚îî‚îÄ‚îÄ 2017-01-02--this-is-a-document__bill_vacation.pdf
    ‚îî‚îÄ‚îÄ 2018
        ‚îú‚îÄ‚îÄ 2018-04-30--this-might-be-important__work_travel.pdf
        ‚îú‚îÄ‚îÄ 2018-05-26--parov-stelar__concert_ticket.pdf
        ‚îî‚îÄ‚îÄ 2018-12-01--master-thesis__finally_longterm_university.pdf
</code></pre><p>This structure accomplishes our needs and makes it very easy to search files ...</p><ul><li>... by tag via a searchterm like: <code>_tagname</code>, starting with <code>_</code></li><li>... by description via a searchterm like: <code>-descriptionword</code>, starting with <code>-</code></li><li>... by tag or description via a searchterm like: <code>searchword</code>, starting with the term</li></ul><p>Moreover the file content can be searched, if the PDF files contain a text layer, which can be done with <a href="https://en.wikipedia.org/wiki/Optical_character_recognition">OCR</a>.</p><h2>My Workflow</h2><h3>Scanning</h3><p>With all these archive parameters set up, I started creating a workflow. I scanned all the old letters, bills etc. which was really time consuming. Afterwards I stacked the paper documents chronologically. One filing folder for each year. New incoming documents will be scanned and stored in a box. Only very important certificates get stored separately.</p><p>Now you might think: <em>Well, is it really faster to scan the documents and tag them afterwards instead of sorting them right away?</em></p><p>The answer in my case: <strong>Yes, definitely!</strong> As you are reading this I assume you are a tech person, which leads you to spend more time on your computer than in front of your shelf with all the binders.</p><p>By scanning a document and leaving it in a box afterwards, you shift them to a place, where you might spend some time. In my case, I speed up the scanning process by using the <a href="https://scanbot.io/">Scanbot App</a> which also extracts the text from my scans and saves it in the PDF (Pro Feature).</p><h3>Tagging</h3><p>With the scanned documents on my computer, I first used a little python tool to tag them, which was <em>ok</em>. But tabbing, tag autocompletion and other shortcuts seemed to be a better fit for this workflow. That's why I started <a href="https://github.com/JulianKahnert/PDF-Archiver"><strong>PDF Archiver</strong></a>.</p><p align="center">
<a href="https://github.com/JulianKahnert/PDF-Archiver" target="itunes_store">
  <img src="https://juliankahnert.de/img/AppIcon.svg" width="100px">
</a>
</p><p>It is an open source project, which helps to rename the scanned documents accordingly to the prior concept. The app can be installed with the commands from the <a href="https://github.com/JulianKahnert/PDF-Archiver#floppy_disk-installation">installation section</a> of the GitHub repository or be downloaded directly from the <a href="https://apps.apple.com/app/pdf-archiver/id1352719750">Mac App Store</a>. In both cases: please talk to me about feature requests and/or general thoughts. Send me a <a href="mailto:support@PDF-Archiver.io">mail</a> or create a <a href="https://github.com/JulianKahnert/PDF-Archiver/issues">GitHub issue</a>!</p><h2>Benefits</h2><p>This leads to the benefits of saving the files digitally:</p><ul><li>With all your documents on your computer, you can easily copy them. Having tagged documents stored on your smartphone might get handy in the future.</li></ul><ul><li>Furthermore you can create backups of all your documents. Keep in mind that a <a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/">3-2-1 Backup Strategy</a> is a useful thing. The archive should not be stored on only one disk!</li></ul><ul><li>Besides the archive structure, the <a href="https://github.com/JulianKahnert/PDF-Archiver">PDF Archiver</a> saves all tags as <a href="https://support.apple.com/HT202754">macOS Finder Tags</a>. This becomes very handy in the Finder on macOS and the iCloud Drive app on iOS.</li></ul><ul><li>Last but not least: old paper documents can be trashed easily after some years. Just ditch the whole filing folder of e.g. the year 2001.</li></ul>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2017-10-24--triosence</guid><title>Triosence</title><description>Just some thoughts after the great concert of Triosence. Let me know what you think about their new album 'Hidden Beauty'!</description><link>https://juliankahnert.de/posts/2017-10-24--triosence</link><pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p><em>Anspruchsvolle Musik ein¬≠g√§n¬≠gig pr√§sentieren.</em></p><p>So lautet eines der Ziele von <a href="http://www.triosence.com">Triosence</a>, welches mit einer unglaublichen Leichtigkeit und Pr√§zision umgesetzt wird. Gleichzeitig wirken die vom Pianisten komponierten Lieder und deren Geschichten absolut authentisch, was neue Ebenen der Musik er√∂ffnet. Hierbei werden Ideen von dem Bassisten und dem Schlagzeuger aufgenommen und in grandiosen Soli weiterentwickelt. So entstehen St√ºcke deren Genres variieren und trotzdem √ºber die Alben hinweg harmonieren.</p><p>Liebe Triosence, ich hoffe ihr behaltet die Freude an der Musik und eure Gelassenheit die das Publikum mit Begeisterung aufnimmt.</p><p align="center">
<iframe src="https://embed.music.apple.com/de/album/hidden-beauty/1207845190?app=music&amp;itsct=music_box&amp;itscg=30200&amp;ct=albums_hidden_beauty&amp;ls=1" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; max-width: 660px; overflow: hidden; border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius: 10px; border-bottom-left-radius: 10px; background-color: transparent; background-position: initial initial; background-repeat: initial initial;"></iframe>
</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2017-04-30--open-source</guid><title>Open Source</title><description>My opinion about Open Source projects and development.</description><link>https://juliankahnert.de/posts/2017-04-30--open-source</link><pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>Ich nutze den Messenger <a href="https://wire.com/">Wire</a>, das Betriebssystem <a href="https://www.freebsd.org">FreeBSD</a> , den Texteditor <a href="https://atom.io">Atom</a>, <a href="https://home-assistant.io">Home Assistant</a>, <a href="https://feedbin.com">Feedbin</a>, <a href="http://www.latex-project.org">LaTeX</a> etc. Was sie alle gemeinsam haben: der Quellcode ist frei zug√§nglich!</p><p>Ich habe vor ein paar Tagen mit einem Freund √ºber das Thema <em>Open Source</em> diskutiert und gemerkt, dass es mich auch im Nachhinein noch sehr besch√§ftigt hat. Ich wei√ü, dass man selber vielleicht schnell eine sch√ºtzende Haltung einnimmt, wenn man etwas sehr zeitintensives geschaffen hat. Doch bin ich der festen √úberzeugung, dass man √ºber diese Haltung reflektiert nachdenken sollte, indem man sich fragt: W√§re es nicht sch√∂n, wenn noch weitere Personen daran teilhaben k√∂nnen?</p><p>Ich w√ºrde gerne an einer Welt arbeiten, in der wir eine Kultur des <em>Teilens</em> leben! Bei der jeder den Teil, den er gut kann, auslebt und wir so gemeinsam das <em>gro√üen Ganzen</em> vielleicht ein kleines bisschen besser machen. Den instinktiven Gedanken Dinge zu "sch√ºtzen", indem wir sie anderen vorenthalten, sollten wir hingegen versuchen abzuschalten bzw. im Keim ersticken!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2017-03-06--brot-backen</guid><title>Brot backen</title><description>Here are some thoughts after hearing the podcast CRE213 about bread.</description><link>https://juliankahnert.de/posts/2017-03-06--brot-backen</link><pubDate>Mon, 6 Mar 2017 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>Die <a href="https://cre.fm/cre213-brot">Folge 213</a> des Podcast <a href="https://cre.fm">CRE: Technik, Kultur, Gesellschaft</a> befasst sich mit dem Thema Brot. Zun√§chst war ich skeptisch und fragte mich, wie man ein fast dreist√ºndiges Gespr√§ch mit diesem Thema f√ºllt. Doch schon nach kurzer Zeit ist der Funk, vorangetrieben durch die Begeisterung von <a href="https://www.ploetzblog.de">Lutz Gei√üler</a>, √ºbergesprungen.</p><h3>Das Anstellgut</h3><p>Ich fing an mich weiter zu informieren und so stand zun√§chst der Sauerteig auf dem Programm. Roggenvollkornmehl lie√ü sich schnell beschaffen und es konnte losgehen mit dem Projekt <em>Brot</em>. Die Herstellung des Anstellguts war vergleichsweise aufw√§ndig, da ich versuchte die Zeiten exakt einzuhalten. Im Nachhinein betrachtet, w√§re eine weniger <em>wissenschaftliche Herangehensweise</em>, also mit gr√∂√üeren Toleranzen bei Zeit und Zutatenmenge, wahrscheinlich ebenso erfolgreich. Mit <a href="https://www.ploetzblog.de/tipps-und-tricks/sauerteig/">dieser Anleitung</a> klappte es jedenfalls direkt beim ersten Versuch. Dieses Anstellgut muss (im besten Fall) einmalig hergestellt werden und kann von nun an aufgefrischt werden. Hierf√ºr werden 10g Anstellgut mit jeweils 50g Mehl und Wasser vermischt und √ºber Nacht auf eine Heizung gestellt. So sollte es 1-2 Wochen im K√ºhlschrank gelagert werden k√∂nnen, bevor es erneut aufgefrischt werden muss.</p><h3>Das Brot</h3><p>Da ich mit meinem Anstellgut sehr zufrieden war, suchte ich ein Rezept f√ºr das keine zus√§tzliche Hefe ben√∂tigt wurde. Ich entschied mich f√ºr das <a href="https://www.ploetzblog.de/2009/08/16/gebacken-konsumbrot/">Konsumbrot nach B√§cker S√ºpke</a> und experimentiere auch nach zwei Monaten immer noch mit diesem Rezept herum. Das Roggen- (Type 1150) und Weizenmehl (Type 1050) sind in diversen Drogeriem√§rkten zu finden. Um auf Weizenmehl Type 812 zu kommen, mische ich es mit dem "normalen" Weizenmehl Type 405.</p><h3>Das Ergebnis</h3><p>Zugegebenerma√üen waren die ersten Versuche ess- aber noch nicht genie√übar. Mittlerweile hat sich dies ge√§ndert und sogar als Geschenk wird es verwendet. Doch nicht nur der Genuss von frischem Brot l√§sst mich w√∂chentlich 1-2 Brot backen. Auch das Gef√ºhl Wasser und Mehl so veredeln zu k√∂nnen, dass ein schmackhaftes Brot entsteht, ist immer wieder faszinierend. Von daher kann ich mich nur anschlie√üen und sagen:</p><h3 style="text-align: center;" markdown="1"><a href="https://janw.io/backt-mehr-brot">Backt mehr Brot!</a></h3>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2017-01-29--raspberry-pi-temperatursensor</guid><title>Raspberry Pi Temperatursensor</title><description>Connecting a temperature sensor to a Raspberry Pi and publish values to my home automation.</description><link>https://juliankahnert.de/posts/2017-01-29--raspberry-pi-temperatursensor</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p align="center">
<img src="https://juliankahnert.de/img/pi-temperature.jpg" style="border: 2px solid black;" height="150"/>
</p><p>Im Rahmen von meiner Heimautomation mit <a href="http://home-assistant.io/">HomeAssistant</a> (eine sehr interessantes Projekt mit unz√§hligen M√∂glichkeiten) wollte ich die Temperatur in einem Raum messen und habe hierf√ºr eine einfache und kosteng√ºnstige L√∂sung gesucht. Da ich ohnehin schon einen Raspberry Pi f√ºr andere Dinge nutze, bot es sich an diesen auch als Temperatursensor zu verwenden und so bin ich auf <a href="http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/temperature/">dieses</a> Tutorial gesto√üen. Die Einrichtung ist extrem einfach und die Kosten bleiben im einstelligen Euro-Bereich (sofern ein Raspberry Pi schon vorhanden ist).</p><h3>Komponenten</h3><p>Die folgenden Komponenten werden ben√∂tigt:</p><ul><li>Raspberry Pi</li><li>1x Temperatursensor (<code>DS18B20</code>)</li><li>1x Widerstand (<code>4.7kŒ©</code>)</li><li>1x Steckbrett (z.B. <a href="https://www.amazon.de/gp/product/B00LO32MBM">diese</a>)</li><li>3x male-female Jumper-Kabel (z.B. <a href="https://www.amazon.de/dp/B00DI4ZSRU">diese</a>)</li></ul><p>Anstelle des Steckbretts und der Jumper-Kabel kann der Sensor nat√ºrlich auch an den Raspberry Pi gel√∂tet werden.</p><h3>Verbindung</h3><p>Der Temperatursensor mit wie folgt mit dem Raspberry Pi (ausgeschaltet) verbunden werden:</p><img src="http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/temperature/sensor-connection.png" alt="Temperatursensor"/><p>Die Pin-Belegung des Raspberry Pis sind z.B. <a href="https://www.raspberrypi.org/documentation/usage/gpio/">hier</a> zu finden.</p><p><strong>Wichtig:</strong> Wenn der Sensor angeschlossen ist und der Raspberry Pi zum ersten Mal gestartet wird, sollte man den Sensor anfassen und pr√ºfen, ob er nach 4-5 Sekunden hei√ü wird. Ist dies der Fall, ist er nicht richtig verbunden und die Schaltung muss nochmal √ºberpr√ºft werden.</p><h3>Programmierungen</h3><p>Zun√§chst muss der <code>1-Wire</code> Sensor in der Raspberry Pi Konfiguration aktiviert werde:</p><pre><code>sudo raspi-config
# <span class="type">Interfacing Options</span> &gt; <span class="number">1</span>-<span class="type">Wire</span> &gt; enable

sudo modprobe w1-gpio
sudo modprobe w1-therm

# <span class="type">Pi</span> ggf. <span class="property">neu</span> starten
sudo reboot
</code></pre><p>Anschlie√üend wird der Name des Sensors gesucht:</p><pre><code>ls /sys/bus/w1/devices/

# nun sollte der <span class="type">Name</span> zu sehen sein
<span class="number">28</span>-0416869dcaff  w1_bus_master1

# hier: <span class="number">28</span>-0416869dcaff
</code></pre><p>Die Temperatur kann schon jetzt ausgelesen werde <code>cat /sys/bus/w1/devices/28-0416869dcaff/w1_slave</code> (Name entsprechend anpassen):</p><pre><code>2e <span class="number">01</span> 4b <span class="number">46</span> 7f ff 0c <span class="number">10</span> e4 : crc=e4 <span class="type">YES</span>
2e <span class="number">01</span> 4b <span class="number">46</span> 7f ff 0c <span class="number">10</span> e4 t=<span class="number">18875</span>
</code></pre><p>Der Wert <code>t=18875</code> entspricht der Temperatur in <code>1/1000 ÀöC</code>. Dies wird mit dem folgenden Python Skript (<code>temperature.py</code>) auf eine Nachkommastelle gerundet und anschlie√üend ausgegeben.</p><pre><code>#!/usr/bin/env python

# <span class="type">CHANGE THIS</span> - device id from <span class="string">"ls /sys/bus/w1/devices/"</span>
device_id = <span class="string">"28-0416869dcaff"</span>

# <span class="keyword">get</span> temperature data
tfile = <span class="call">open</span>(<span class="string">"/sys/bus/w1/devices/"</span> + device_id + <span class="string">"/w1_slave"</span>)  
text = tfile.<span class="call">read</span>()
tfile.<span class="call">close</span>()

# parse and format temperature data
secondline = text.<span class="call">split</span>(<span class="string">"\n"</span>)[<span class="number">1</span>]
temperaturedata = secondline.<span class="call">split</span>(<span class="string">" "</span>)[<span class="number">9</span>]
temperature = <span class="call">float</span>(temperaturedata[<span class="number">2</span>:])

# round to one decimal place
temperature = <span class="call">round</span>(temperature / <span class="number">1000</span>, <span class="number">1</span>)
print temperature
</code></pre><p>Nun lassen sich unterschiedliche Anwendungen realisieren. In meinem Fall lese ich die Werte des Raspberry Pis via <code>ssh</code> aus:</p><pre><code>ssh pi@192.<span class="number">168.178.101</span> <span class="string">"python temperature.py"</span>
</code></pre><p>In einem weiteren Anwendungsbeispiel k√∂nnte man einen Cronjob einrichten, sodass der Raspberry Pi die Temperatur an eine <a href="https://home-assistant.io/components/mqtt/">MQTT-Datenbank</a> √ºbertr√§gt.</p><hr><p><strong>Anmerkung zum Bild:</strong> Es hat sich herausgestellt, dass es ratsam ist, den Temperatursensor nicht direkt auf dem Raspberry Pi zu befestigen, da die Abw√§rme die Temperaturmessung stark verf√§lscht, selbst wenn keine anspruchsvollen Berechnungen ausgef√ºhrt werden.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2016-07-07--einstieg-espresso</guid><title>Einstieg Espresso</title><description>My basic equipment for a good espresso with a list of resources for more information.</description><link>https://juliankahnert.de/posts/2016-07-07--einstieg-espresso</link><pubDate>Thu, 7 Jul 2016 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>Letztes Jahr fing ich an, mich f√ºr Kaffee bzw. Espresso zu begeistern. Bis zu diesem Zeitpunkt hatte ich einen Vollautomaten und war auch eigentlich recht zufrieden mit den Ergebnissen. Doch irgendwie fand ich das Thema so spannend, dass ich anfing mich weiter zu informieren. Dieser Blogeintrag soll die ersten Schritte vereinfachen, indem ich mein eigenes Setup und ein paar n√ºtzliche Webseiten vorstelle.</p><h3>Informationen</h3><p>Die erste Anlaufstelle f√ºr die Zubereitung von Espresso ist f√ºr mich das <a href="https://www.kaffeewiki.de/">KaffeeWiki</a>. Dort gibt es alle wichtigen Daten und Beschreibungen der Abl√§ufe von der <a href="https://www.kaffeewiki.de/index.php?title=Mahlgrad">Bestimmung des Mahlgrads</a> √ºber die <a href="https://www.kaffeewiki.de/index.php?title=Espresso_mit_Siebtr√§germaschine_zubereiten">Zubereitung des Espressos</a> bis hin zum [Aufsch√§umen der Milch](https:// www.kaffeewiki.de/index.php?title=Milchaufsch√§umen). Wem das nicht reicht, f√ºr den habe ich hier noch ein paar Buchempfehlungen:</p><ul><li>Scott Rao: <em>The Professional Barista's Handbook</em>.</li><li>Anette Moldvaer: <em>Das Kaffee-Buch</em>.</li><li>Johanna Wechselberger: <em>Das Kaffeebuch: f√ºr Anf√§nger, Profis und Freaks</em>.</li><li>Dimitrios Tsantidis: <em>Faszination Espressomaschine</em>.</li></ul><h3>Mein Setup</h3><p>Bei dem Kauf war mir wichtig, dass die Maschine unter 500‚Ç¨ kostet und ein PID (zur Temperaturregelung) besitzt. Also entschied ich mich f√ºr die <strong>Lelit PL41TEM</strong>. Auch nach fast einem Jahr halte ich sie f√ºr eine ideale Einstiegs-Maschine. Sie ist ein <em>Einkreiser</em>, was bedeutet, dass man nicht gleichzeitig seinen Espresso beziehen und Milch aufsch√§umen kann. Vergleichbare Maschinen, die zwei Kreisl√§ufe besitzen, sind in der Regel mindestens doppelt so teuer. Falls man jedoch vorwiegend Milchgetr√§nke wie Cappuccino, Latte Macchiato etc. trinkt, sollte man einen Zweikreiser in Erw√§gung ziehen.</p><p>Als n√§chstes kommt die Kaffeem√ºhle. Frisch gemahlener Kaffee ist das Wichtigste bei der Zubereitung eines Espressos. Hier wird h√§ufig am falschen Ende gespart. Als Faustregel h√∂rt man immer wieder, dass die M√ºhle ungef√§hr so viel kosten sollte wie die Siebtr√§germaschine. Auch ich habe zuerst den Fehler gemacht und mir die <strong>GREAF C800</strong> gekauft, doch ich war mit den Mahlgradeinstellungen nicht zufrieden. Nun bin ich auf die <strong>Mahlk√∂nig Vario Home</strong> umgestiegen, welche einen Timer hat. Dies hat den Vorteil, dass die Kaffeemenge immer konstant bleibt. Ich habe zwar keinen Blindtest machen k√∂nnen aber subjektiv lie√ü sich auch geschmacklich einen deutlicher Unterschied ausmachen. Au√üerdem l√§sst sich der Mahlgrad mit der Mahlk√∂nig durch die vielen Zwischenstufen besser bestimmen.</p><p>Ein Kritikpunkt ist allerdings die sehr grobe Werkseinstellung. Sowohl bei meiner, als auch bei einer Vario Home im Freundeskreis, wurde die M√ºhle mit einer viel zu groben Werkseinstellung ausgeliefert. Dies hat zur Folge, dass selbst bei der feinsten Einstellung der Espresso viel zu schnell durch das Kaffeemehl flie√üt. Im Gegensatz zu der <a href="http://www.baratza.com/grinder/vario/">baugleichen Version</a> (wird nur in UK/USA vertrieben) ist ein Loch bei der Mahlk√∂nig versiegelt, durch das man die Werkseinstellung ver√§ndern k√∂nnte. Abhilfe schafft jedoch die <a href="http://www.home-barista.com/grinders/recalibrating-baratza-vario-t10282.html">grobe Justierung</a>, welche auch bei Mahlk√∂nig nur mit einem Gummistopfen verschlossen wird.</p><p>Ein letzter Tipp, der mir deutlich weitergeholfen hat, ist die Waage von <a href="http://brewista.eu">Brewista</a>. Sie kann so verwendet werden, dass ein Timer startet, sobald Espresso in die Tasse l√§uft. Mit diesem Setup hat man zumindest einige der vielen Faktoren (Temperatur, Durchflusszeit und Gewicht des Kaffeepulvers), die Espresso beeinflussen unter Kontrolle.</p><h3>Bohnen</h3><p>Wer bisher noch keine Erfahrungen mit Siebtr√§germaschinen sammeln konnte, sollte erstmal nur eine Bohnensorte (min. 1 kg) kaufen und mit dieser herum experimentieren. Bohnen von Tchibo, Melitta etc. sind hier <u>nicht</u> zielf√ºhrend. Mir schmeckte der <em>Vietnam Espresso</em> von den <a href="http://www.hancoffee.de/">Han Coffee Roasters</a> besonders gut und stellt meiner Meinung nach eine gute Bohne f√ºr den Einstieg dar. Erst wenn man √ºber einen l√§ngeren Zeitraum eine gute Espresso-Qualit√§t reproduzieren kann, sollte man andere Bohnen testen.</p><h3>Shops</h3><p>Bei <a href="https://www.coffee24.de">Coffee24</a> findet man eine gro√üe Auswahl an Lelit Maschinen, welche sonst eher selten zu finden sind. Neben <a href="http://www.amazon.de/ref=as_li_ss_tl?_encoding=UTF8&camp=1638&creative=19454&linkCode=ur2&site-redirect=de&tag=minkorrekt-21">Amazon.de</a> gibt es bei <a href="http://www.stoll-espresso.de">Stoll Espresso</a> und <a href="http://espresso-maschinenraum.de">Espresso Maschinenraum</a> eine gro√üe Auswahl an Maschinen und M√ºhlen. Ersatzteile findet man bei <a href="https://www.espressoxxl.de">EspressoXXL</a>.</p><h3>√úberblick - Grundausstattung</h3><table><thead><tr><th align="left"></th><th align="left"></th></tr></thead><tbody><tr><td align="left"><strong>Maschine</strong></td><td align="left">Lelit PL41TEM</td></tr><tr><td align="left"><strong>M√ºhle</strong></td><td align="left">Mahlk√∂nig Vario Home</td></tr><tr><td align="left"><strong>Waage</strong></td><td align="left">Brewista Smart Scale</td></tr><tr><td align="left"><strong>Milchk√§nnchen</strong></td><td align="left">Motta Europa 250ml + 500ml</td></tr><tr><td align="left"><strong>Tamper</strong></td><td align="left">Motta 8170/B 57mm</td></tr><tr><td align="left"><strong>Maschinenreiniger</strong></td><td align="left">Puly Caff Kaffeefettreiniger</td></tr><tr><td align="left"><strong>Tassen</strong></td><td align="left">Cilio Cappuccino-/Espressotasse Roma</td></tr><tr><td align="left"><strong>Tamping Matte</strong></td><td align="left">Concept Art Tamping Matte aus Silikon</td></tr><tr><td align="left"><strong>Abschlagbeh√§lter</strong></td><td align="left">Motta 7750 Edelstahl Abschlagbeh√§lter</td></tr><tr><td align="left"><strong>Milchthermometer</strong></td><td align="left"></td></tr><tr><td align="left"><strong>Seifenhandt√ºcher</strong></td><td align="left"></td></tr></tbody></table><p align="center">
<img src="https://juliankahnert.de/img/coffee0.jpg" style="border: 2px solid black;" height="150"/>
<img src="https://juliankahnert.de/img/coffee1.jpg" style="border: 2px solid black;" height="150"/>
<img src="https://juliankahnert.de/img/coffee2.jpg" style="border: 2px solid black;" height="150"/>
</p>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2016-05-12--FreeBSD</guid><title>FreeBSD</title><description>Installation und erste Schritte</description><link>https://juliankahnert.de/posts/2016-05-12--FreeBSD</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><content:encoded><![CDATA[<h3>Update vom 29. Juli 2016</h3><p>Wegen einiger Umstrukturierungen der <a href="https://github.com/JulianKahnert/.dotfiles">Dotfiles</a> muss die Einrichtung der Z-Shell angepasst werden:</p><pre><code>cd $HOME &amp;&amp; git clone https://github.<span class="property">com</span>/<span class="type">JulianKahnert</span>/.<span class="property">dotfiles</span>.<span class="property">git</span> &amp;&amp; cd $HOME/.<span class="property">dotfiles</span>/dotfiles.<span class="property">sh</span> install
</code></pre><hr><h3>Original vom 12. Mai 2016</h3><p>Ein neues Blog und jetzt auch noch ein neues Betriebssystem (FreeBSD 10.3). Ich habe mir den <a href="https://vimeo.com/channels/freebsdguides">FreeBSD Guide</a> mal genauer angesehen und dachte mir, dass es vielleicht ganz n√ºtzlich sein k√∂nnte eine Mitschrift davon zu haben. Ich halte mich hier bei der Beschreibung bewusst kurz, um eine √úberblick zu bekommen. Der Ablauf sieht wie folgt aus:</p><ul><li>Basiseinstellungen (ports, pkg, sudo, Zeit)</li><li>ZFS Auto Snapshot</li><li>Jails</li><li>BTSync</li></ul><h3>Basiseinstellungen</h3><h4>Ports &amp; Paket Manager</h4><p>Zuerst werden die Ports f√ºr FreeBSD heruntergeladen und extrahiert. Anschlie√üend wird der Port <code>portmaster</code> kompiliert, um sp√§ter einfacher weitere Ports installieren zu k√∂nnen. F√ºr <code>sudo</code>, <code>git</code> und <code>nano</code> wird der Paket Manager verwendet.</p><pre><code>su
portsnap fetch
portsnap extract

cd /usr/ports/ports-mgmt/portmaster/ &amp;&amp; make install

portmaster /usr/ports/shells/zsh

pkg install security/sudo devel/git editors/nano
</code></pre><h4>Einstellungen sudo</h4><ul><li><code>visudo</code> um Einstellungen f√ºr <code>sudo</code> zu ver√§ndern.</li><li>Kein Passwort f√ºr <code>sudo</code>:</li></ul><pre><code>## <span class="type">Same</span> thing without a password
%wheel <span class="type">ALL</span>=(<span class="type">ALL</span>) <span class="type">NOPASSWD</span>: <span class="type">ALL</span>
</code></pre><h4>Zeit einstellen</h4><ul><li><code>sudo ntpdate pool.ntp.org</code> Systemzeit aktualisieren</li><li><code>sudo nano /etc/rc.conf</code> Eintrag hinzuf√ºgen um Dienst automatisch zu starten:</li></ul><pre><code>ntpd_enable=<span class="string">"YES"</span>
</code></pre><ul><li><code>sudo service ntpd start</code> Dienst beim ersten Mal manuell starten.</li><li><code>sudo ntpq -p</code> bzw. <code>date</code> um zu pr√ºfen, ob die Uhrzeit richtig eingestellt wurde.</li></ul><h4>Z-Shell einrichten</h4><ul><li><code>chsh</code> um die standard Shell (<code>which zsh</code>) zu ver√§ndern:</li></ul><pre><code><span class="type">Shell</span>: /usr/local/bin/zsh
</code></pre><ul><li><em>Dotfiles</em> von <a href="https://github.com/JulianKahnert/.dotfiles">GitHub</a> kopieren und installieren:</li></ul><pre><code>git clone https://github.<span class="property">com</span>/<span class="type">JulianKahnert</span>/.<span class="property">dotfiles</span>.<span class="property">git</span> &amp;&amp; cd ~/.<span class="property">dotfiles</span> &amp;&amp; sh ./install-dotfiles.<span class="property">sh</span>
</code></pre><h3>ZFS Auto Snapshot einrichten</h3><http://eduardosanchez.me/2015/08/31/zfs-automatic-snapshots/><ul><li><code>sudo pkg install zfstools</code> Tools installieren</li><li>mit denen <code>sudo nano /etc/crontab</code> Eintr√§ge erstellen</li><li><code>PATH</code> in Crontab hinzuf√ºgen <code>which ruby &amp;&amp; which zfs-auto-snapshot</code> z.B.:</li></ul><pre><code><span class="type">PATH</span>=/etc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
</code></pre><p>und <em>crontabs</em> einrichten:</p><pre><code># <span class="type">ZFS Autosnapshots</span>
<span class="number">15</span>,<span class="number">30</span>,<span class="number">45</span> * * * * root /usr/local/sbin/zfs-auto-snapshot frequent  <span class="number">4
0</span>        * * * * root /usr/local/sbin/zfs-auto-snapshot hourly   <span class="number">24
7        0</span> * * * root /usr/local/sbin/zfs-auto-snapshot daily     <span class="number">7
14       0</span> * * <span class="number">7</span> root /usr/local/sbin/zfs-auto-snapshot weekly    <span class="number">4
28       0 1</span> * * root /usr/local/sbin/zfs-auto-snapshot monthly  <span class="number">12</span>
</code></pre><ul><li>Autosnapshots f√ºr <code>ZPOOL/DATASET</code> aktivieren und Frequenz ausw√§hlen:</li></ul><pre><code>sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot=<span class="keyword">true</span> <span class="type">ZPOOL</span>/<span class="type">DATASET</span>
sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot:hourly=<span class="keyword">true</span> <span class="type">ZPOOL</span>/<span class="type">DATASET</span>
</code></pre><ul><li>Einstellungen f√ºr Autosnapshots ansehen:</li></ul><pre><code>sudo zfs <span class="keyword">get</span> com.<span class="property">sun</span>:auto-snapshot:frequent,com.<span class="property">sun</span>:auto-snapshot:hourly,com.<span class="property">sun</span>:auto-snapshot:daily,com.<span class="property">sun</span>:auto-snapshot:weekly,com.<span class="property">sun</span>:auto-snapshot:monthly <span class="type">POOL</span>/<span class="type">DATASET</span>
</code></pre><h3>Jails</h3><h4>Netzwerk f√ºr die Jails</h4><p><code>sudo nano /etc/rc.conf</code> editieren, diese Zeilen hinzuf√ºgen:</p><pre><code>ifconfig_em0=<span class="string">"inet 10.0.1.65 netmask 255.255.255.0"</span>
defaultrouter=<span class="string">"10.0.1.1"</span>

ifconfig_em0_alias0=<span class="string">"inet 10.0.1.101 netmask 255.255.255.0"</span>
ifconfig_em0_alias1=<span class="string">"inet 10.0.1.102 netmask 255.255.255.0"</span>
ifconfig_em0_alias2=<span class="string">"inet 10.0.1.103 netmask 255.255.255.0"</span>
</code></pre><h3>EZJail einrichten</h3><https://erdgeist.org/arts/software/ezjail/><ul><li><code>sudo portmaster sysutils/ezjail</code> Installation</li><li><code>sudo nano /usr/local/etc/ezjail.conf</code> editieren, um ZFS verwenden zu k√∂nnen:</li></ul><pre><code># <span class="type">ZFS</span> options

# <span class="type">Setting</span> this to <span class="type">YES</span> will start to manage the basejail and newjail <span class="keyword">in</span> <span class="type">ZFS</span>
ezjail_use_zfs=<span class="string">"YES"</span>

# <span class="type">Setting</span> this to <span class="type">YES</span> will manage <span class="type">ALL</span> new jails <span class="keyword">in</span> their own zfs
ezjail_use_zfs_for_jails=<span class="string">"YES"</span>

# <span class="type">The</span> name of the <span class="type">ZFS</span> ezjail should create jails on, it will be mounted at the ezjail_jaildir
ezjail_jailzfs=<span class="string">"zroot/ezjail"</span>

# <span class="type">ADVANCED</span>, be very careful!
ezjail_zfs_properties=<span class="string">"-o compression=lz4"</span>
</code></pre><ul><li><code>sudo ezjail-admin install -msp</code> <em>ezjail</em> installieren</li><li><code>sudo nano /etc/rc.conf</code> Zeile anh√§ngen:</li></ul><pre><code>ezjail_enable=<span class="string">"YES"</span>
</code></pre><ul><li><code>cd /usr/jails/flavours &amp;&amp; sudo cp -r example myflavour</code> neues Template f√ºr weitere Jails einrichten.</li><li><code>sudo nano /usr/jails/flavours/myflavour/etc/rc.conf</code> editieren:</li></ul><pre><code>sshd_enable=<span class="string">"YES"</span>
</code></pre><ul><li><code>sudo nano /usr/jails/flavours/myflavour/etc/resolv.conf</code> Nameserver eintragen:</li></ul><pre><code>search no-dns-available.<span class="property">example</span>.<span class="property">com</span>
nameserver <span class="number">208.67.222.222</span>
nameserver <span class="number">8.8.8.8</span>
</code></pre><ul><li>IP Adresse nochmal pr√ºfen und Jail erstellen:</li></ul><pre><code>ifconfig
sudo ezjail-admin create -f myflavour sync.<span class="property">juliankahnert</span>.<span class="property">de</span> <span class="number">10.0.1.101</span>
</code></pre><ul><li><strong>Jail starten:</strong> <code>sudo ezjail-admin console -f sync_juliankahnert_de</code> oder <code>sudo ezjail-admin start sync_juliankahnert_de</code></li></ul><h4>ZPool erstellen und in Jail einbinden</h4><ul><li>Data Set <a href="https://www.freebsd.org/doc/handbook/zfs-zpool.html">erzeugen</a><ul><li><code>sudo zpool create mypool mirror /dev/ada1 /dev/ada2</code></li><li><code>sudo zfs set compression=lz4 mypool</code></li><li>Status anzeigen lassen: <code>zpool status</code></li></ul></li></ul><ul><li>Einstellungen aus <https://forums.freebsd.org/threads/51262/></li></ul><pre><code>sudo sysctl security.<span class="property">jail</span>.<span class="property">mount_allowed</span>=<span class="number">1</span>
sudo sysctl security.<span class="property">jail</span>.<span class="property">mount_devfs_allowed</span>=<span class="number">1</span>
sudo sysctl security.<span class="property">jail</span>.<span class="property">mount_zfs_allowed</span>=<span class="number">1</span>
</code></pre><ul><li><code>sudo nano /usr/local/etc/ezjail/sync_juliankahnert_de</code> EZJail config ver√§ndern:</li></ul><pre><code>export jail_sync_juliankahnert_de_zfs_datasets=<span class="string">"mypool/BTSync"</span>
export jail_sync_juliankahnert_de_parameters=<span class="string">"enforce_statfs=1 allow.mount=1 allow.mount.zfs=1 allow.mount.procfs=1 allow.mount.devfs=1"</span>
</code></pre><ul><li><strong>Auf Host:</strong> ZFS einbinden:</li></ul><pre><code>sudo zfs create mypool/<span class="type">BTSync</span>
sudo zfs <span class="keyword">set</span> jailed=on mypool/<span class="type">BTSync</span>
sudo zfs jail sync_juliankahnert_de mypool/<span class="type">BTSync</span>
</code></pre><ul><li><strong>Im Jail:</strong> ZPool mounten <code>sudo ezjail-admin console sync_juliankahnert_de</code>:</li></ul><pre><code>sudo zfs mount mypool/<span class="type">BTSync</span>
sudo chown -<span class="type">R</span> sync_user:wheel /mypool/<span class="type">BTSync</span>

</code></pre><ul><li><code>sudo nano /usr/local/etc/crontab</code> Autostart einrichten:</li></ul><pre><code><span class="keyword">@reboot</span>		root    	zfs mount mypool/<span class="type">BTSync</span>
</code></pre><h3>BTSync: Installation, Autostart und Data Set einrichten</h3><ul><li>BTSync installieren: <code>cd /usr/ports/net-p2p/btsync/ &amp;&amp; make install clean</code></li><li><code>sudo nano /etc/crontab</code> editieren f√ºr Autostart:</li></ul><pre><code><span class="keyword">@reboot</span> 	sync_user  	/usr/local/bin/btsync
</code></pre><ul><li>Autosnapshot f√ºr BTSync Daten einrichten:</li></ul><pre><code>sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot=<span class="keyword">true</span> mypool/<span class="type">BTSync</span>
sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot:frequent=<span class="keyword">true</span> mypool/<span class="type">BTSync</span>
sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot:hourly=<span class="keyword">true</span> mypool/<span class="type">BTSync</span>
sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot:daily=<span class="keyword">true</span> mypool/<span class="type">BTSync</span>
sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot:weekly=<span class="keyword">true</span> mypool/<span class="type">BTSync</span>
sudo zfs <span class="keyword">set</span> com.<span class="property">sun</span>:auto-snapshot:monthly=<span class="keyword">true</span> mypool/<span class="type">BTSync</span>
</code></pre>]]></content:encoded></item><item><guid isPermaLink="true">https://juliankahnert.de/posts/2015-11-03--hello-world</guid><title>Hello, World!</title><description>Starting this blog.</description><link>https://juliankahnert.de/posts/2015-11-03--hello-world</link><pubDate>Tue, 3 Nov 2015 00:00:00 +0000</pubDate><content:encoded><![CDATA[<p>Das hier ist jetzt also mein erster Blogeintrag. Ich bin sehr gespannt, wo die Reise hingeht.</p><p>Bei Fragen und Anmerkungen, meldet euch gerne: <a href="mailto:mail@juliankahnert.de">mail@juliankahnert.de</a>!</p>]]></content:encoded></item></channel></rss>