name: Deploy with Publish

on:
  push:
    branches:
      - author

jobs:
  # validate:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Build and run chia
  #       run: |
  #         # TODO: download chia binary directly would improve build times
  #         git clone https://github.com/JulianKahnert/chia 
  #         cd chia
  #         swift build --configuration release
  #         mv `swift build --configuration release --show-bin-path`/chia /usr/local/bin
  #         cd ..
  #         rm -rf chia/
  #         /usr/local/bin/chia --config .chia.yml

  build:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    container:
      image: "swift:5.7"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Build Publish
        run: |
          apt-get -q update && apt-get -q install -y make
          git clone https://github.com/JohnSundell/Publish.git
          cd Publish
          make

      - name: Generate Site
        run: publish generate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: Output
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

#       - name: Upload Artifacts üî∫ # The project is then uploaded as an artifact named 'site'.
#         uses: actions/upload-artifact@v3
#         with:
#           name: site
#           path: Output

#   deploy:
#     # needs: [validate, build]
#     needs: [build]
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout üõéÔ∏è
#         uses: actions/checkout@v3.1.0

#       - name: Download Artifacts üîª # The built project is downloaded into the 'site' folder.
#         uses: actions/download-artifact@v3
#         with:
#           name: site

#       - name: Deploy üöÄ
#         uses: JamesIves/github-pages-deploy-action@v4.4.1
#         with:
#           folder: .
#           branch: main

  purge-cache:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Purge cache
        uses: nathanvaughn/actions-cloudflare-purge@master
        if: success()
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_AUTH_KEY: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
